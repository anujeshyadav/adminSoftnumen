{"version":3,"sources":["views/apps/freshlist/accounts/EditAccount.js"],"names":["CreateAccount","EditOneData","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","handleInputChange","useParams","e","type","i","target","name","value","checked","test","length","useEffect","console","log","CreateAccountView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","catch","err","className","onSubmit","preventDefault","_id","CreateAccountUpdate","status","swal","lg","md","MyDropdown","dropdown","label","_text","required","onChange","option","map","key","_attributes","input","ele","View","Edit","role","roles","find","permissions","includes","phoneinput","sm","inputClass","country","onKeyDown","countryCodeEditable","phone","style","color","disabled","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","placeholder","CheckBox","marginRight","size","Radiobutton","marginLeft","Ripple"],"mappings":"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","file":"static/js/379.c1213398.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport swal from \"sweetalert\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountUpdate,\r\n  CreateAccountView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nconst CreateAccount = ({ EditOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const Params = useParams();\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  // console.log(formData);\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n\r\n  useEffect(() => {\r\n    console.log(EditOneData);\r\n    setFormData(EditOneData);\r\n    // CreateAccountUpdate(Params.id)\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData));\r\n        setCreatAccountView(JSON.parse(jsonData));\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData, EditOneData?._id);\r\n    CreateAccountUpdate(EditOneData?._id, formData)\r\n      .then((res) => {\r\n        if (res.status) {\r\n          setFormData({});\r\n          // window.location.reload();\r\n          swal(\"Acccont Updated Successfully\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Account Information</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.CreateAccount?.input?.map((ele, i) => {\r\n                    let View = \"\";\r\n                    let Edit = \"\";\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        (role) => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          {Edit && Edit ? (\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <PhoneInput\r\n                                    inputClass=\"myphoneinput\"\r\n                                    country={\"us\"}\r\n                                    onKeyDown={(e) => {\r\n                                      if (\r\n                                        ele?.type?._attributes?.type == \"number\"\r\n                                      ) {\r\n                                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                          e.preventDefault();\r\n                                      }\r\n                                    }}\r\n                                    countryCodeEditable={false}\r\n                                    name={ele?.name?._text}\r\n                                    value={formData[ele?.name?._text]}\r\n                                    onChange={(phone) => {\r\n                                      setFormData({\r\n                                        ...formData,\r\n                                        [ele?.name?._text]: phone,\r\n                                      });\r\n                                    }}\r\n                                  />\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {View && View ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label>{ele?.label?._text}</Label>\r\n                                      <PhoneInput\r\n                                        disabled\r\n                                        inputClass=\"myphoneinput\"\r\n                                        country={\"us\"}\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        countryCodeEditable={false}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(phone) => {\r\n                                          setFormData({\r\n                                            ...formData,\r\n                                            [ele?.name?._text]: phone,\r\n                                          });\r\n                                        }}\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : null}\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.country}\r\n                                onChange={(country) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"country\"]: country,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  formData?.country?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.State}\r\n                                onChange={(State) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  formData?.State?.countryCode,\r\n                                  formData?.State?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.City}\r\n                                onChange={(City) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {Edit && Edit ? (\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          ) : (\r\n                            <>\r\n                              {View && View ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label>{ele?.label?._text}</Label>\r\n\r\n                                      <Input\r\n                                        disabled\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        type={ele?.type?._attributes?.type}\r\n                                        placeholder={ele?.placeholder?._text}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            ele?.type?._attributes?.type,\r\n                                            i\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : null}\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n                <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />{\" \"}\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n              <hr />\r\n              <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mt-2\"\r\n                                style={{ marginLeft: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Update\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n"],"sourceRoot":""}