{"version":3,"sources":["../node_modules/reactstrap/es/Container.js","redux/actions/auth/registerActions.js","views/pages/authentication/register/Register.js","../node_modules/reactstrap/es/FormGroup.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["_excluded","propTypes","tag","tagPropType","fluid","PropTypes","oneOfType","bool","string","className","cssModule","object","Container","props","Tag","attributes","_objectWithoutPropertiesLoose","containerClass","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","firebase","length","config","firebaseAuth","RegisterFirebase","state","email","password","name","confirmPass","handleRegister","e","preventDefault","signupWithFirebase","Row","Col","sm","xl","lg","md","Card","CardHeader","src","logo","class","alt","Form","onSubmit","this","FormGroup","Label","Input","type","placeholder","value","onChange","setState","target","required","color","icon","size","label","defaultChecked","Button","Ripple","onClick","history","push","outline","Component","connect","values","auth","register","dispatch","userEmail","createUserWithEmailAndPassword","then","result","onAuthStateChanged","user","updateProfile","displayName","payload","isSignedIn","catch","error","console","log","message","children","node","row","check","inline","disabled","CheckBoxesVuexy","checked"],"mappings":"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","file":"static/js/211.2f007c20.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import * as firebase from \"firebase/app\"\r\nimport { history } from \"../../../history\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\nimport axios from \"axios\"\r\nimport { config } from \"../../../authServices/firebase/firebaseConfig\"\r\n\r\n// Init firebase if not already initialized\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config)\r\n}\r\n\r\nlet firebaseAuth = firebase.auth()\r\n\r\nexport const signupWithFirebase = (email, password, name) => {\r\n  return dispatch => {\r\n    let userEmail = null,\r\n      loggedIn = false\r\n    // userName = null\r\n\r\n    firebaseAuth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(result => {\r\n        firebaseAuth.onAuthStateChanged(user => {\r\n          result.user.updateProfile({\r\n            displayName: name\r\n          })\r\n          if (user) {\r\n            userEmail = user.email\r\n            // let userName = user.displayName\r\n            loggedIn = true\r\n            dispatch({\r\n              type: \"SIGNUP_WITH_EMAIL\",\r\n              payload: {\r\n                email: userEmail,\r\n                name,\r\n                isSignedIn: loggedIn\r\n              }\r\n            })\r\n            dispatch({\r\n              type: \"LOGIN_WITH_EMAIL\",\r\n              payload: {\r\n                email: userEmail,\r\n                name\r\n              }\r\n            })\r\n          }\r\n        })\r\n        history.push(\"/\")\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message)\r\n      })\r\n  }\r\n}\r\n\r\nexport const signupWithJWT = (email, password, name) => {\r\n  return dispatch => {\r\n    axios\r\n      .post(\"/api/authenticate/register/user\", {\r\n        email: email,\r\n        password: password,\r\n        name: name\r\n      })\r\n      .then(response => {\r\n        var loggedInUser\r\n\r\n        if(response.data){\r\n\r\n          loggedInUser = response.data.user\r\n\r\n          localStorage.setItem(\"token\", response.data.token)\r\n\r\n          dispatch({\r\n            type: \"LOGIN_WITH_JWT\",\r\n            payload: { loggedInUser, loggedInWith: \"jwt\" }\r\n          })\r\n\r\n          history.push(\"/\")\r\n        }\r\n\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport logo from \"../../../../assets/img/logo/logo.png\";\r\n\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Check } from \"react-feather\";\r\nimport { connect } from \"react-redux\";\r\nimport { signupWithFirebase } from \"../../../../redux/actions/auth/registerActions\";\r\nimport { history } from \"../../../../history\";\r\nclass RegisterFirebase extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    confirmPass: \"\",\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    e.preventDefault();\r\n    this.props.signupWithFirebase(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.name\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-0 justify-content-center\">\r\n          <Col\r\n            sm=\"8\"\r\n            xl=\"7\"\r\n            lg=\"10\"\r\n            md=\"8\"\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <Col lg=\"8\" md=\"12\" className=\"p-1\">\r\n              <Card className=\"rounded-0  px-2 pb-3 login-tabs-container\">\r\n                <CardHeader className=\"pb-1 justify-content-center\">\r\n                  <img src={logo} class=\"img-fluid\" alt=\"...\" />\r\n\r\n                  <br />\r\n                </CardHeader>\r\n                <Form onSubmit={this.handleRegister}>\r\n                  <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                    <div class=\"form-group\">\r\n                      <Label>Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        class=\"form-control mt-1 mb-3\"\r\n                        placeholder=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={(e) =>\r\n                          this.setState({ name: e.target.value })\r\n                        }\r\n                        required\r\n                        name=\"name\"\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n                  {/* <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n          />\r\n          <Label>Name</Label>\r\n        </FormGroup> */}\r\n\r\n                  {/* <FormGroup className=\"form-label-group\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={this.state.email}\r\n            onChange={e => this.setState({ email: e.target.value })}\r\n          />\r\n          <Label>Email</Label>\r\n        </FormGroup> */}\r\n                  <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                    <div class=\"form-group\">\r\n                      <Label>Gmail</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={(e) =>\r\n                          this.setState({ email: e.target.value })\r\n                        }\r\n                        required\r\n                        name=\"email\"\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                    <div class=\"form-group\">\r\n                      <Label>Password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={(e) =>\r\n                          this.setState({ password: e.target.value })\r\n                        }\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n\r\n                  {/* <FormGroup className=\"form-label-group\">\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={this.state.password}\r\n            onChange={e => this.setState({ password: e.target.value })}\r\n          />\r\n          <Label>Password</Label>\r\n        </FormGroup> */}\r\n                  <FormGroup className=\"form-label-group\">\r\n                    <div class=\"form-group\">\r\n                      <Label>Confirm Password</Label>\r\n                      <Input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        required\r\n                        value={this.state.confirmPass}\r\n                        onChange={(e) =>\r\n                          this.setState({ confirmPass: e.target.value })\r\n                        }\r\n                      />\r\n                    </div>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                      label=\" I accept the terms & conditions.\"\r\n                      defaultChecked={true}\r\n                    />\r\n                  </FormGroup>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <Button.Ripple\r\n                      onClick={() => history.push(\"/pages/login\")}\r\n                      color=\"primary\"\r\n                      outline\r\n                    >\r\n                      Login\r\n                    </Button.Ripple>\r\n                    <Button.Ripple color=\"primary\" type=\"submit\">\r\n                      Register\r\n                    </Button.Ripple>\r\n                  </div>\r\n                </Form>\r\n              </Card>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.register,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { signupWithFirebase })(\r\n  RegisterFirebase\r\n);\r\n\r\n// import React from \"react\"\r\n// import {\r\n//   Card,\r\n//   CardHeader,\r\n//   CardTitle,\r\n//   CardBody,\r\n//   Row,\r\n//   Col,\r\n//   Nav,\r\n//   NavItem,\r\n//   NavLink,\r\n//   TabContent,\r\n//   TabPane\r\n// } from \"reactstrap\"\r\n// import classnames from \"classnames\"\r\n// import RegisterFirebase from \"./RegisterFirebase\"\r\n// //import RegisterAuth0 from \"./RegisterAuth0\"\r\n// import RegisterJWT from \"./RegisterJWT\"\r\n// import registerImg from \"../../../../assets/img/pages/register.jpg\"\r\n// import \"../../../../assets/scss/pages/authentication.scss\"\r\n\r\n// class Register extends React.Component {\r\n//   state = {\r\n//     activeTab: \"1\"\r\n//   }\r\n//   toggle = tab => {\r\n//     if (this.state.activeTab !== tab) {\r\n//       this.setState({\r\n//         activeTab: tab\r\n//       })\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <Row className=\"m-0 justify-content-center\">\r\n//         <Col\r\n//           sm=\"8\"\r\n//           xl=\"7\"\r\n//           lg=\"10\"\r\n//           md=\"8\"\r\n//           className=\"d-flex justify-content-center\"\r\n//         >\r\n//           <Card className=\"bg-authentication rounded-0 mb-0 w-100\">\r\n//             <Row className=\"m-0\">\r\n//               <Col\r\n//                 lg=\"6\"\r\n//                 className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\r\n//               >\r\n//                 <img className=\"mr-1\" src={registerImg} alt=\"registerImg\" />\r\n//               </Col>\r\n//               <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n//                 <Card className=\"rounded-0 mb-0 p-2\">\r\n//                   <CardHeader className=\"pb-1 pt-50\">\r\n//                     <CardTitle>\r\n//                       <h4 className=\"mb-0\">Create Account</h4>\r\n//                     </CardTitle>\r\n//                   </CardHeader>\r\n//                   <p className=\"px-2 auth-title mb-0\">\r\n//                     Fill the below form to create a new account.\r\n//                   </p>\r\n//                   <Nav tabs className=\"px-2\">\r\n//                     <NavItem>\r\n//                       <NavLink\r\n//                         className={classnames({\r\n//                           active: this.state.activeTab === \"1\"\r\n//                         })}\r\n//                         onClick={() => {\r\n//                           this.toggle(\"1\")\r\n//                         }}\r\n//                       >\r\n//                         JWT\r\n//                       </NavLink>\r\n//                     </NavItem>\r\n//                     <NavItem>\r\n//                       <NavLink\r\n//                         className={classnames({\r\n//                           active: this.state.activeTab === \"2\"\r\n//                         })}\r\n//                         onClick={() => {\r\n//                           this.toggle(\"2\")\r\n//                         }}\r\n//                       >\r\n//                         Firebase\r\n//                       </NavLink>\r\n//                     </NavItem>\r\n//                     <NavItem>\r\n//                       {/* <NavLink\r\n//                         className={classnames({\r\n//                           active: this.state.activeTab === \"3\"\r\n//                         })}\r\n//                         onClick={() => {\r\n//                           this.toggle(\"3\")\r\n//                         }}\r\n//                       >\r\n//                         Auth0\r\n//                       </NavLink> */}\r\n//                     </NavItem>\r\n//                   </Nav>\r\n//                   <CardBody className=\"pt-1 pb-50\">\r\n//                     <TabContent activeTab={this.state.activeTab}>\r\n//                       <TabPane tabId=\"1\">\r\n//                         <RegisterJWT />\r\n//                       </TabPane>\r\n//                       <TabPane tabId=\"2\">\r\n//                         <RegisterFirebase />\r\n//                       </TabPane>\r\n//                       <TabPane tabId=\"3\">\r\n//                         {/* <RegisterAuth0 /> */}\r\n//                       </TabPane>\r\n//                     </TabContent>\r\n//                   </CardBody>\r\n//                 </Card>\r\n//               </Col>\r\n//             </Row>\r\n//           </Card>\r\n//         </Col>\r\n//       </Row>\r\n//     )\r\n//   }\r\n// }\r\n// export default Register;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}