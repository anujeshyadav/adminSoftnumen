{"version":3,"sources":["views/apps/freshlist/house/AddProduct.js"],"names":["selectItem1","AddProduct","useState","setViewpermisson","setEditpermisson","setCreatepermisson","setDeletepermisson","fullname","setfullname","GSTIN","setGSTIN","StateList","setStateList","CityList","setCityList","SelectedState","setSelectedState","B_City","setB_City","checkbox","setcheckbox","S_City","setS_City","Mobile_no","setMobile_no","B_Country","setB_Country","S_Country","setS_Country","Phone_no","setPhone_no","Place_of_Supply","setPlace_of_Supply","B_State","setB_State","S_State","setS_State","B_Street","setB_Street","S_Street","setS_Street","B_PinCode","setB_PinCode","S_PinCode","setS_PinCode","multiSelect","setmultiSelect","selectedOptions","password","setpassword","email","setemail","status","setstatus","AssignRole","setAssignRole","CompanyName","setCompanyName","Companytype","setCompanytype","UserName","setUserName","productName","setproductName","setCity","partname","partseriel","quantity","formValues","setFormValues","useEffect","pageparmission","JSON","parse","localStorage","getItem","newparmisson","role","find","value","pageName","permission","includes","formdata","FormData","append","Userinfo","id","axiosConfig","post","then","response","propertyNames","Object","values","data","roles","get","states","catch","error","console","log","onSelect1","selectedList","selectedItem","length","i","push","arr","map","ele","uniqueChars","Set","res","cities","err","onRemove1","removedItem","handleChange","e","newFormValues","target","name","className","onSubmit","event","preventDefault","alert","stringify","element","index","key","type","placeholder","onChange","color","onClick","splice","removeFormFields","selectedOption","toString","success","swal","lg","md","for","required","showCheckbox","isObject","options","onSelect","onRemove","displayValue","sm","maxLength","onKeyDown","size","min","state_title","checked","style","height","width","disabled","marginRight","Ripple"],"mappings":"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","file":"static/js/364.ece994bf.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Form,\r\n//   Row,\r\n//   Input,\r\n//   Label,\r\n//   Button,\r\n//   FormGroup,\r\n//   CustomInput,\r\n// } from \"reactstrap\";\r\n// import { history } from \"../../../../history\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import { Route } from \"react-router-dom\";\r\n// import swal from \"sweetalert\";\r\n// import { CloudLightning } from \"react-feather\";\r\n// import { ResponsiveContainer } from \"recharts\";\r\n\r\n// export class AddProduct extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       category_name: \"\",\r\n//       Brand: \"\",\r\n//       P_Title: \"\",\r\n//       Type: \"\",\r\n//       Price: \"\",\r\n//       stock: \"\",\r\n//       Regularprice: \"\",\r\n//       formValues: [{ PName: \"\", price: \"\" }],\r\n//       DiscountPrice: \"\",\r\n//       Addmore: false,\r\n//       rowData: [],\r\n//       TypeList: [],\r\n//       description: \"\",\r\n//       variety: \"\",\r\n//       shipmentfee: \"\",\r\n//       Tags: \"\",\r\n//       taxrate: \"\",\r\n//       status: \"\",\r\n//       // selectedFile1: null,\r\n//       // selectedName1: \"\",\r\n//       // selectedFile2: null,\r\n//       // selectedName2: \"\",\r\n//       selectedFile3: [],\r\n//       selectedName3: \"\",\r\n//       // selectedFile4: null,\r\n//       // selectedName4: \"\",\r\n//     };\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//   }\r\n//   async componentDidMount() {\r\n//     const data = new FormData();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     await axiosConfig.post(\"/getcategory\", data).then((response) => {\r\n//       let rowData = response.data.data?.category;\r\n//       console.log(rowData);\r\n//       if (rowData) {\r\n//         this.setState({ rowData });\r\n//       }\r\n//     });\r\n//     const type = new FormData();\r\n//     // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     type.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     type.append(\"role\", pageparmission?.Userinfo?.role);\r\n\r\n//     const brand = new FormData();\r\n//     // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     brand.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     brand.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     await axiosConfig.post(\"/getbrand\", brand).then((response) => {\r\n//       let Brandlist = response.data.data?.brands;\r\n//       console.log(response);\r\n//       if (Brandlist) {\r\n//         this.setState({ Brandlist });\r\n//       }\r\n//     });\r\n//     await axiosConfig.post(\"/producttypelistview\", type).then((response) => {\r\n//       let TypeList = response.data.data;\r\n//       console.log(TypeList);\r\n//       if (TypeList) {\r\n//         this.setState({ TypeList });\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   handleChange(i, e) {\r\n//     let formValues = this.state.formValues;\r\n//     formValues[i][e.target.name] = e.target.value;\r\n//     this.setState({ formValues });\r\n//   }\r\n\r\n//   addFormFields() {\r\n//     this.setState({\r\n//       formValues: [...this.state.formValues, { PName: \"\", price: \"\" }],\r\n//     });\r\n//     this.handleSubmit();\r\n//   }\r\n\r\n//   removeFormFields(i) {\r\n//     let formValues = this.state.formValues;\r\n//     formValues.splice(i, 1);\r\n//     this.setState({ formValues });\r\n//   }\r\n\r\n//   handleSubmit() {\r\n//     console.log(this.state.formValues);\r\n//   }\r\n\r\n//   // onChangeHandler1 = (event) => {\r\n//   //   this.setState({ selectedFile1: event.target.files[0] });\r\n//   //   this.setState({ selectedName1: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n//   // onChangeHandler2 = (event) => {\r\n//   //   this.setState({ selectedFile2: event.target.files[0] });\r\n//   //   this.setState({ selectedName2: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n//   onChangeHandler3 = (event) => {\r\n//     let selectedName = Array.from(event.target.files);\r\n//     console.log(selectedName);\r\n//     this.setState({ selectedFile3: selectedName });\r\n\r\n//     // this.setState({ selectedFile3: event.target.files });\r\n//     // this.setState({ selectedName3: event.target.files[0].name });\r\n//     // console.log(event.target.files);\r\n//   };\r\n//   // onChangeHandler4 = (event) => {\r\n//   //   this.setState({ selectedFile4: event.target.files[0] });\r\n//   //   this.setState({ selectedName4: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n\r\n//   changeHandler1 = (e) => {\r\n//     this.setState({ status: e.target.value });\r\n//   };\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     const data = new FormData();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     // console.log(pageparmission?.Userinfo?.id);\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"brand_id\", this.state.Brand);\r\n//     data.append(\"product_type_id\", this.state.Type);\r\n//     data.append(\"title\", this.state.P_Title);\r\n//     if (this.state.formValues.length > 0) {\r\n//       data.append(\"veriety\", JSON.stringify(this.state.formValues));\r\n//     }\r\n//     data.append(\"category_id\", this.state.category_name);\r\n//     // data.append(\"stock\", this.state.stock);\r\n//     data.append(\"price\", this.state.Price);\r\n//     data.append(\"discountprice\", this.state.DiscountPrice);\r\n//     data.append(\"description\", this.state.description);\r\n//     data.append(\"shipping_fee\", this.state.shipmentfee);\r\n//     data.append(\"tax_rate\", this.state.taxrate);\r\n//     data.append(\"tags\", this.state.Tags);\r\n//     data.append(\"status\", \"Active\");\r\n//     // this.state.selectedFile3.forEach((image, index) => {\r\n//     //   data.append(`image`, image);\r\n//     // });\r\n//     // debugger;\r\n//     for (let i = 0; i < this.state.selectedFile3?.length; i++) {\r\n//       data.append(\"images[]\", this.state.selectedFile3[i]);\r\n//     }\r\n//     // for (const file of this.state.selectedFile3) {\r\n//     //   if (this.state.selectedFile3 !== null) {\r\n//     //     data.append(\"image_name\", file);\r\n//     //   }\r\n//     // }\r\n\r\n//     axiosConfig\r\n//       .post(`/addproduct`, data, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data; \",\r\n//         },\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         if (response.data.success) {\r\n//           swal(\"Success!\", \"You Data is been Submitted\", \"success\");\r\n//           // this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Card>\r\n//           <h1 className=\"p-2 \">Product Upload</h1>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               <h2>Basic Information</h2>\r\n//             </Col>\r\n//             {/* <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\" btn btn-danger float-right\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/freshlist/category/categoryList\")\r\n//                     }\r\n//                   >\r\n//                     Back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col> */}\r\n//           </Row>\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n//               <Row className=\"mb-2\">\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Category *</Label>\r\n\r\n//                     <select\r\n//                       onChange={(e) =>\r\n//                         this.setState({ category_name: e.target.value })\r\n//                       }\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Category--</option>\r\n//                       {this.state.rowData &&\r\n//                         this.state.rowData?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.category_name}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                     {/* <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"category_name\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.category_name}\r\n//                       onChange={this.changeHandler}\r\n//                     /> */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Type *</Label>\r\n\r\n//                     <select\r\n//                       onChange={(e) => this.setState({ Type: e.target.value })}\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Type--</option>\r\n//                       {this.state.TypeList &&\r\n//                         this.state.TypeList?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.product_type}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                     {/* <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"category_name\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.category_name}\r\n//                       onChange={this.changeHandler}\r\n//                     /> */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Brand *</Label>\r\n\r\n//                     <select\r\n//                       required\r\n//                       onChange={(e) => this.setState({ Brand: e.target.value })}\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Brand--</option>\r\n//                       {this.state.Brandlist &&\r\n//                         this.state.Brandlist?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.brand_name}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Title</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"P_Title\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.P_Title}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"12\" md=\"12\">\r\n//                   <FormGroup>\r\n//                     <Label>Description</Label>\r\n//                     <textarea\r\n//                       type=\"text\"\r\n//                       rows={5}\r\n//                       className=\"form-control\"\r\n//                       placeholder=\"Description ...\"\r\n//                       name=\"description\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.description}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> PRICE (₹)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Amount In Number\"\r\n//                       name=\"Price\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.Price}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <Row>\r\n//                     <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n//                       <div>\r\n//                         <h5 className=\"mt-2\"> OR</h5>\r\n//                       </div>\r\n//                     </Col>\r\n//                     <Col>\r\n//                       <FormGroup>\r\n//                         <Button\r\n//                           style={{ width: \"100%\" }}\r\n//                           color=\"primary\"\r\n//                           className=\"button add mt-2\"\r\n//                           type=\"button\"\r\n//                           // onClick={() => this.addFormFields()}\r\n//                           onClick={() => this.setState({ Addmore: true })}\r\n//                         >\r\n//                           Add\r\n//                         </Button>\r\n\r\n//                         {/* <Label>Variety</Label>\r\n//                         <Input\r\n//                           type=\"text\"\r\n//                           placeholder=\"Variety...\"\r\n//                           name=\"variety\"\r\n//                           bsSize=\"lg\"\r\n//                           value={this.state.variety}\r\n//                           onChange={this.changeHandler}\r\n//                         /> */}\r\n//                       </FormGroup>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </Col>{\" \"}\r\n//               </Row>\r\n//               {this.state.Addmore ? (\r\n//                 <>\r\n//                   <Row>\r\n//                     <Col lg=\"12\">\r\n//                       {this.state.formValues.map((element, index) => (\r\n//                         <div className=\"\" key={index}>\r\n//                           <Row className=\"py-1\">\r\n//                             <Col lg=\"4\" sm=\"4\">\r\n//                               <label>Product Name</label>\r\n//                               <input\r\n//                                 className=\"form-control\"\r\n//                                 type=\"text\"\r\n//                                 name=\"PName\"\r\n//                                 value={element.PName || \"\"}\r\n//                                 onChange={(e) => this.handleChange(index, e)}\r\n//                               />\r\n//                             </Col>\r\n//                             <Col lg=\"4\" sm=\"4\">\r\n//                               <label>Price</label>\r\n//                               <input\r\n//                                 onKeyDown={(e) =>\r\n//                                   [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                                   e.preventDefault()\r\n//                                 }\r\n//                                 min={0}\r\n//                                 className=\"form-control\"\r\n//                                 type=\"number\"\r\n//                                 name=\"price\"\r\n//                                 value={element.price || \"\"}\r\n//                                 onChange={(e) => this.handleChange(index, e)}\r\n//                               />\r\n//                             </Col>\r\n//                             <Col>\r\n//                               {index ? (\r\n//                                 <Button\r\n//                                   color=\"primary\"\r\n//                                   type=\"button\"\r\n//                                   className=\"button remove mt-2\"\r\n//                                   onClick={() => this.removeFormFields(index)}\r\n//                                 >\r\n//                                   Remove\r\n//                                 </Button>\r\n//                               ) : null}\r\n//                               <Button\r\n//                                 color=\"primary\"\r\n//                                 className=\"button add mt-2  mx-3\"\r\n//                                 type=\"button\"\r\n//                                 onClick={() => this.addFormFields()}\r\n//                               >\r\n//                                 Add\r\n//                               </Button>\r\n//                             </Col>\r\n//                           </Row>\r\n//                         </div>\r\n//                       ))}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </>\r\n//               ) : null}\r\n\r\n//               <Row>\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Quantity </Label>\r\n//                     <Input\r\n//                       type=\"number\"\r\n//                       placeholder=\"in Number\"\r\n//                       name=\"stock\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.stock}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col> */}\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Discount Price</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Discount Price\"\r\n//                       name=\"DiscountPrice\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.DiscountPrice}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>SHIPPING FEE(₹)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Number...\"\r\n//                       name=\"shipmentfee\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.shipmentfee}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>TAX RATE (%)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Tax in Percentage\"\r\n//                       name=\"taxrate\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.taxrate}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>TAGS</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Type here...\"\r\n//                       name=\"Tags\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.Tags}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Col lg=\"6\" sm=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Media & Published (Select multiple files)</Label>\r\n//                     <CustomInput\r\n//                       multiple\r\n//                       style={{ cursor: \"pointer\" }}\r\n//                       accept=\"image/png,image/jpeg,image/jpg\"\r\n//                       name=\"image[]\"\r\n//                       type=\"file\"\r\n//                       onChange={this.onChangeHandler3}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mb-1\"\r\n//                 >\r\n//                   Add Product\r\n//                 </Button.Ripple>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default AddProduct;\r\n\r\n// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nconst selectItem1 = [];\r\nconst selectstate2 = [];\r\n\r\nconst AllunSelectedCity = [];\r\nconst Selectedarray = [];\r\n\r\nconst AddProduct = () => {\r\n  // const [Address, setAddress] = useState(\"\");\r\n  const [Viewpermisson, setViewpermisson] = useState(null);\r\n  const [Editpermisson, setEditpermisson] = useState(null);\r\n  const [Createpermisson, setCreatepermisson] = useState(null);\r\n  const [Deletepermisson, setDeletepermisson] = useState(null);\r\n  const [fullname, setfullname] = useState(\"\");\r\n  const [GSTIN, setGSTIN] = useState(\"\");\r\n  const [StateList, setStateList] = useState([]);\r\n  const [CityList, setCityList] = useState([]);\r\n  const [SelectedSCity, setSelectedSCity] = useState([]);\r\n  const [SelectedState, setSelectedState] = useState([]);\r\n  const [B_City, setB_City] = useState(\"\");\r\n  const [checkbox, setcheckbox] = useState(\"\");\r\n  const [S_City, setS_City] = useState(\"\");\r\n  const [Mobile_no, setMobile_no] = useState(\"\");\r\n  const [B_Country, setB_Country] = useState(\"\");\r\n  const [S_Country, setS_Country] = useState(\"\");\r\n  const [Phone_no, setPhone_no] = useState(\"\");\r\n  const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n  const [B_State, setB_State] = useState(\"\");\r\n  const [S_State, setS_State] = useState(\"\");\r\n  const [B_Street, setB_Street] = useState(\"\");\r\n  const [S_Street, setS_Street] = useState(\"\");\r\n  const [B_PinCode, setB_PinCode] = useState(\"\");\r\n  const [S_PinCode, setS_PinCode] = useState(\"\");\r\n  const [setuserList, setsetuserList] = useState(false);\r\n  const [multiSelect, setmultiSelect] = useState([]);\r\n  const [selectedOptions, setselectedOptions] = useState([]);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [status, setstatus] = useState(\"\");\r\n  const [AssignRole, setAssignRole] = useState(\"\");\r\n  const [CompanyName, setCompanyName] = useState(\"\");\r\n  const [Companytype, setCompanytype] = useState(\"\");\r\n  const [Selectuser, setSelectuser] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [productName, setproductName] = useState([]);\r\n  const [City, setCity] = useState(\"\");\r\n  const [formValues, setFormValues] = useState([\r\n    { partname: \"\", partseriel: \"\", quantity: \"\" },\r\n  ]);\r\n  useEffect(() => {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let newparmisson = pageparmission?.role?.find(\r\n      value => value?.pageName === \"Create Account\"\r\n    );\r\n    setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n    setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n    setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n    setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig.post(\"/getrolelistdropdown\", formdata).then(response => {\r\n      // console.log(response);\r\n      const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n      // console.log(propertyNames);\r\n      setproductName(propertyNames);\r\n    });\r\n    // state List\r\n    axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then(response => {\r\n        setStateList(response.data?.states);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    let selectedOption = [...new Set(selectedOptions)];\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append(\"created_by\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"password\", password);\r\n    formdata.append(\"full_name\", fullname);\r\n    formdata.append(\"gstin_no\", GSTIN);\r\n    formdata.append(\"username\", UserName);\r\n    formdata.append(\"city\", B_City);\r\n    formdata.append(\"mobile\", Mobile_no);\r\n    formdata.append(\"email\", email);\r\n    formdata.append(\"status\", status);\r\n    formdata.append(\"role\", AssignRole);\r\n    formdata.append(\"company_name\", CompanyName);\r\n    formdata.append(\"company_type\", Companytype);\r\n    formdata.append(\"place_supply\", Place_of_Supply);\r\n    formdata.append(\"billing_street\", B_Street);\r\n    formdata.append(\"billing_city\", B_City);\r\n    formdata.append(\"billing_state\", B_State);\r\n    formdata.append(\"billing_country\", B_Country);\r\n    formdata.append(\"billing_pincode\", B_PinCode);\r\n    formdata.append(\"shipping_street\", S_Street);\r\n    formdata.append(\"shipping_city\", S_City);\r\n    formdata.append(\"shipping_state\", S_State);\r\n    formdata.append(\"shipping_country\", S_Country);\r\n    formdata.append(\"shipping_pincode\", S_PinCode);\r\n    formdata.append(\"phone_no\", Phone_no);\r\n    if (selectedOption.length > 0) {\r\n      formdata.append(\"state_id\", multiSelect.toString());\r\n    } else {\r\n      formdata.append(\"state_id\", SelectedState);\r\n    }\r\n\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/createuser\", formdata)\r\n      .then(response => {\r\n        if (response.data?.success) {\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n          setAssignRole(\"\");\r\n          setstatus(\"\");\r\n          setemail(\"\");\r\n          setCity(\"\");\r\n          setPhone_no(\"\");\r\n          setUserName(\"\");\r\n          setfullname(\"\");\r\n          setpassword(\"\");\r\n          setS_Country(\"\");\r\n          setS_State(\"\");\r\n          setS_City(\"\");\r\n          setS_Street(\"\");\r\n          setS_PinCode(\"\");\r\n        }\r\n        // this.props.history.push(\"/app/softNumen/order/placeorder\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleMatchaddress = (e, value) => {\r\n    setcheckbox(value);\r\n    if (value) {\r\n      setS_Country(B_Country);\r\n      setS_State(B_State);\r\n      setS_City(B_City);\r\n      setS_Street(B_Street);\r\n      setS_PinCode(B_PinCode);\r\n    } else {\r\n      setS_Country(\"\");\r\n      setS_State(\"\");\r\n      setS_City(\"\");\r\n      setS_Street(\"\");\r\n      setS_PinCode(\"\");\r\n    }\r\n  };\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectedOptions.push(selectedList[i].id);\r\n      }\r\n    }\r\n\r\n    let arr = selectedList.map(ele => ele.id);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n\r\n    let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n    if (uniqueChars.length === 1) {\r\n      let value = uniqueChars[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"state_id\", value);\r\n      axiosConfig\r\n        .post(`/getcity`, formdata)\r\n        .then(res => {\r\n          setCityList(res?.data?.cities);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setCityList([]);\r\n    }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem) => {\r\n    // debugger;\r\n    // setselectedOptions(\"\");\r\n    // console.log(selectedList);\r\n    // setmultiSelect(selectedList);\r\n\r\n    let arr = selectedList.map(ele => ele.id);\r\n    // console.log(arr);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    console.log(removedItem);\r\n  };\r\n\r\n  let handleChange = (i, e) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let addFormFields = () => {\r\n    setFormValues([...formValues, { name: \"\", partseriel: \"\", quantity: \"\" }]);\r\n  };\r\n\r\n  let removeFormFields = i => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let handleSubmit = event => {\r\n    event.preventDefault();\r\n    alert(JSON.stringify(formValues));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add here</h1>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"container \">\r\n            <form onSubmit={handleSubmit}>\r\n              {formValues.map((element, index) => (\r\n                <div className=\"form-inline my-2\" key={index}>\r\n                  <FormGroup>\r\n                    <Label>Part Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Part Name\"\r\n                      value={element.name || \"\"}\r\n                      onChange={e => handleChange(index, e)}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <Label>Part Serial No.</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"partseriel\"\r\n                    placeholder=\"Part Seriel\"\r\n                    value={element.partseriel || \"\"}\r\n                    onChange={e => handleChange(index, e)}\r\n                  />\r\n                  <Label>Quantity </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    placeholder=\"Quantity\"\r\n                    value={element.quantity || \"\"}\r\n                    onChange={e => handleChange(index, e)}\r\n                  />\r\n                  {index ? (\r\n                    <Button\r\n                      className=\"button remove ml-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => removeFormFields(index)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              ))}\r\n              <div className=\"button-section\">\r\n                <Button\r\n                  onClick={() => addFormFields()}\r\n                  color=\"primary\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className=\"mr-1 mt-2 mx-2 button submit\"\r\n                  // className=\"button submit\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> Product Seriel No. *</Label>\r\n                    {/* {AssignRole === \"supplier\" ? ( */}\r\n                    <>\r\n                      <Multiselect\r\n                        required\r\n                        showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={StateList} // Options to display in the dropdown\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={onSelect1} // Function will trigger on select event\r\n                        onRemove={onRemove1} // Function will trigger on remove event\r\n                        displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </>\r\n                    {/* ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={e => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then(res => {\r\n                                setCityList(res?.data?.cities);\r\n                              })\r\n                              .catch(err => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )} */}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Select Role*</Label>\r\n                    <CustomInput\r\n                      required\r\n                      id=\"AssignRole\"\r\n                      type=\"select\"\r\n                      name=\"AssignRole\"\r\n                      value={AssignRole}\r\n                      // onChange={changeHandler}\r\n                      onChange={e => setAssignRole(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n\r\n                      {productName &&\r\n                        productName?.map((value, index) => (\r\n                          <option key={index} value={value}>\r\n                            {value}\r\n                          </option>\r\n                        ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Name *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"fullname\"\r\n                      value={fullname}\r\n                      onChange={e => setfullname(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Display Code *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"UserName\"\r\n                      value={UserName}\r\n                      onChange={e => setUserName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      maxLength={12}\r\n                      onKeyDown={e =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      size={10}\r\n                      min={0}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Mobile_no\"\r\n                      value={Mobile_no}\r\n                      onChange={e => setMobile_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"abcd@gmail.com...\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={e => setemail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onChange={e => setpassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Name</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter CompanyName\"\r\n                      name=\"CompanyName\"\r\n                      value={CompanyName}\r\n                      onChange={e => setCompanyName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Phone Number </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      onKeyDown={e =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      min={0}\r\n                      maxLength={12}\r\n                      size={10}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Phone_no\"\r\n                      value={Phone_no}\r\n                      onChange={e => setPhone_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Type</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Companytype\"\r\n                      name=\"Companytype\"\r\n                      value={Companytype}\r\n                      onChange={e => setCompanytype(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>GSTIN</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter GSTIN No.\"\r\n                      name=\"GSTIN\"\r\n                      value={GSTIN}\r\n                      onChange={e => setGSTIN(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> State *</Label>\r\n                    {AssignRole === \"supplier\" ? (\r\n                      <>\r\n                        <Multiselect\r\n                          required\r\n                          showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={StateList} // Options to display in the dropdown\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={onSelect1} // Function will trigger on select event\r\n                          onRemove={onRemove1} // Function will trigger on remove event\r\n                          displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={e => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            // this.setState({ SelectedState: e.target.value });\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then(res => {\r\n                                setCityList(res?.data?.cities);\r\n                                // this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch(err => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label for=\"cars\">City * </Label>\r\n                  <Multiselect\r\n                    required\r\n                    options={CityList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n                    onSelect={onSelect} // Function will trigger on select event\r\n                    onRemove={onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                  />\r\n                </Col>\r\n\r\n                {AssignRole === \"supplier\" ? (\r\n                  <>\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Place of Supply</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Place_of_Supply\"\r\n                          name=\"Place_of_Supply\"\r\n                          value={Place_of_Supply}\r\n                          onChange={e => setPlace_of_Supply(e.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n                  <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"B_Country\"\r\n                        value={B_Country}\r\n                        onChange={e => setB_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"B_State\"\r\n                        value={B_State}\r\n                        onChange={e => {\r\n                          console.log(e.target.value);\r\n                          setB_State(e.target.value);\r\n                          // this.setState({ B_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then(res => {\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"cars\">Choose City</Label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_City\"\r\n                          value={B_City}\r\n                          onChange={e => setB_City(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          {CityList &&\r\n                            CityList?.map((value, index) => (\r\n                              <option key={index} value={value?.id}>\r\n                                {value?.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"B_Street\"\r\n                        value={B_Street}\r\n                        onChange={e => setB_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={e =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        placeholder=\"Enter PinCode\"\r\n                        name=\"B_PinCode\"\r\n                        value={B_PinCode}\r\n                        onChange={e => setB_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <hr />\r\n                  <Row>\r\n                    <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Input\r\n                        name=\"check\"\r\n                        onChange={e => {\r\n                          handleMatchaddress(e, e.target.checked);\r\n                        }}\r\n                        style={{\r\n                          height: \"15px\",\r\n                          width: \"20px\",\r\n                        }}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n                      <h5> Same as Billing Address </h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_Country\"\r\n                        disabled={checkbox ? true : false}\r\n                        value={S_Country}\r\n                        onChange={e => setS_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"S_State\"\r\n                        value={S_State}\r\n                        onChange={e => {\r\n                          // console.log(e.target.value);\r\n                          setS_State(e.target.value);\r\n                          // this.setState({ S_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then(res => {\r\n                              console.log(res?.data?.cities);\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <select\r\n                        name=\"S_State\"\r\n                        disabled={this.state.checkbox ? true : false}\r\n                        value={this.state.S_State}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                        <option value=\"Maharastra\">Maharastra</option>\r\n                      </select> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label for=\"cars\">Choose City</Label>\r\n\r\n                    <FormGroup>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_City\"\r\n                        value={S_City}\r\n                        onChange={e => setS_City(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select City--</option>\r\n                        {CityList &&\r\n                          CityList?.map((value, index) => (\r\n                            <option key={index} value={value?.id}>\r\n                              {value?.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <FormGroup>\r\n                        <select\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_City\"\r\n                          value={this.state.S_City}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          <option value=\"Indore\">Indore</option>\r\n                          <option value=\"Panvel\">Panvel</option>\r\n                          <option value=\"khandwa\">khandwa</option>\r\n                        </select>\r\n                      </FormGroup> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"S_Street\"\r\n                        value={S_Street}\r\n                        onChange={e => setS_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter PinCode\"\r\n                        onKeyDown={e =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        name=\"S_PinCode\"\r\n                        value={S_PinCode}\r\n                        onChange={e => setS_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* {this.state.setuserList && ( */}\r\n              <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={e => setstatus(e.target.value)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <Label className=\"mt-2  mb-2\"> Select User</Label>\r\n\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"Selectuser\"\r\n                    value={this.state.Selectuser}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"user1\">user 1</option>\r\n                    <option value=\"user2\">user2</option>\r\n                    <option value=\"user2\">UPI</option>\r\n                    <option value=\"user2\">Other</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n              </Row>\r\n              {/* )} */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n"],"sourceRoot":""}