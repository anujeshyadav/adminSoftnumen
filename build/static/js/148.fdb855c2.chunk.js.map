{"version":3,"sources":["views/apps/freshlist/order/Placeorder.js","../node_modules/country-state-city/lib/utils/index.js","../node_modules/country-state-city/lib/state.js","../node_modules/country-state-city/lib/country.js","../node_modules/country-state-city/lib/city.js"],"names":["CreateAccount","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","handleInputChange","useContext","UserContext","e","type","i","target","name","value","checked","test","length","useEffect","console","log","CreateAccountView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","input","permissions","role","catch","err","className","onSubmit","preventDefault","swal","CreateAccountSave","status","window","location","reload","lg","md","MyDropdown","dropdown","label","_text","required","onChange","option","map","key","_attributes","ele","roles","find","includes","phoneinput","sm","inputClass","country","onKeyDown","countryCodeEditable","phone","style","color","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","placeholder","CheckBox","marginRight","size","Radiobutton","Ripple","findEntryByCode","source","code","codex","findIndex","c","undefined","findStateByCodeAndCountryCode","defaultKeyToCompare","entity","compare","a","b","keyToCompare","getAllStates","stateList","states","filter","sort","getStateByCodeAndCountry","stateCode","getStateByCode","warn","sortByIsoCode","countries","getCountryByCode","countryList","getAllCities","cityList","getCitiesOfCountry","sortByStateAndName","cities","result"],"mappings":"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","file":"static/js/148.fdb855c2.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Input,\r\n//   Row,\r\n//   Col,\r\n//   UncontrolledDropdown,\r\n//   DropdownMenu,\r\n//   DropdownItem,\r\n//   DropdownToggle,\r\n//   Button,\r\n//   CardTitle,\r\n//   CardText,\r\n//   Label,\r\n//   FormGroup,\r\n// } from \"reactstrap\";\r\n// import axios from \"axios\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\n// import { ContextLayout } from \"../../../../utility/context/Layout\";\r\n// import { AgGridReact } from \"ag-grid-react\";\r\n// import \"ag-grid-community/dist/styles/ag-grid.css\";\r\n// import { Eye, Trash2, ChevronDown, Edit, CloudLightning } from \"react-feather\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { history } from \"../../../../history\";\r\n// import \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import \"../../../../assets/scss/pages/users.scss\";\r\n// import { FaWallet, Facart, FaCartArrowDown, FaBoxOpen } from \"react-icons/fa\";\r\n// import \"moment-timezone\";\r\n// import { Route } from \"react-router-dom\";\r\n// import { timers } from \"jquery\";\r\n// import swal from \"sweetalert\";\r\n// import { BsFillCartCheckFill } from \"react-icons/bs\";\r\n\r\n// class Placeorder extends React.Component {\r\n//   state = {\r\n//     ProductQuantity: \"\",\r\n//     product: [],\r\n//     rowData: [],\r\n//     Typelist: [],\r\n//     SelectedProduct: [],\r\n//     Type: \"\",\r\n//     productlength: \"\",\r\n//     Addedbtn: false,\r\n//     Viewpermisson: null,\r\n//     Editpermisson: null,\r\n//     Createpermisson: null,\r\n//     Deletepermisson: null,\r\n//     paginationPageSize: 20,\r\n//     currenPageSize: \"\",\r\n//     getPageSize: \"\",\r\n//     defaultColDef: {\r\n//       sortable: true,\r\n//       // editable: true,\r\n//       resizable: true,\r\n//       // rowSelection: \"multiple\",\r\n//       suppressMenu: true,\r\n//     },\r\n//     columnDefs: [\r\n//       {\r\n//         headerName: \"UID\",\r\n//         valueGetter: \"node.rowIndex + 1\",\r\n//         field: \"node.rowIndex + 1\",\r\n//         // checkboxSelection: true,\r\n//         width: 80,\r\n//         filter: true,\r\n//         // cellRendererFramework: (params) => {\r\n//         //   return (\r\n//         //     <div className=\"d-flex align-items-center cursor-pointer\">\r\n//         //       <div className=\"\">\r\n//         //         <input\r\n//         //           className=\"addinarray\"\r\n//         //           onClick={(e) => {\r\n//         //             console.log(e.target.checked);\r\n//         //             if (e.target.checked) {\r\n//         //               console.log(this.state.SelectedProduct);\r\n//         //               this.setState({\r\n//         //                 SelectedProduct: this.state.SelectedProduct.concat(\r\n//         //                   params?.data\r\n//         //                 ),\r\n//         //               });\r\n//         //             } else {\r\n//         //               let data = this.state.SelectedProduct.filter((ele, i) => {\r\n//         //                 if (ele?.id === params?.data?.id) {\r\n//         //                   this.state.SelectedProduct.splice(i, 1);\r\n//         //                 }\r\n//         //               });\r\n//         //             }\r\n//         //           }}\r\n//         //           type=\"checkbox\"\r\n//         //         />\r\n//         //       </div>\r\n//         //     </div>\r\n//         //   );\r\n//         // },\r\n//       },\r\n\r\n//       {\r\n//         headerName: \"PRODUCT Image\",\r\n//         field: \"product\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 150,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"\">\r\n//                 {/* <span>{params.data?.title}</span> */}\r\n//                 {params?.data?.product_images ? (\r\n//                   <img\r\n//                     style={{ borderRadius: \"12px\" }}\r\n//                     width=\"60px\"\r\n//                     height=\"40px\"\r\n//                     src={params?.data?.product_images[0]}\r\n//                     alt=\"image\"\r\n//                   />\r\n//                 ) : (\r\n//                   \"No Image \"\r\n//                 )}\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"PRODUCT\",\r\n//         field: \"title\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 150,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"\">\r\n//                 <span>{params.data?.title}</span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"brand_name\",\r\n//         field: \"brand_name\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 150,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"\">\r\n//                 <span>{params.data?.brand_name}</span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"product_type\",\r\n//         field: \"product_type\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 150,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"\">\r\n//                 <span>{params.data?.product_type}</span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n\r\n//       // {\r\n//       //   headerName: \"CATEGORY\",\r\n//       //   field: \"category_name\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 150,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{params.data?.category_name}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Description\",\r\n//       //   field: \"description\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{ReactHtmlParser(params.data?.description)}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       {\r\n//         headerName: \"Quantity\",\r\n//         field: \"Quantity\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 260,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"d-flex\">\r\n//                 {/* <Button color=\"primary\">-</Button> */}\r\n//                 <input\r\n//                   style={{ position: \"relative\" }}\r\n//                   // value={this.state.ProductQuantity}\r\n//                   onChange={(e) => {\r\n//                     this.setState({ ProductQuantity: e.target.value });\r\n//                   }}\r\n//                   type=\"number\"\r\n//                   className=\"form-control\"\r\n//                 />\r\n\r\n//                 <Button\r\n//                   // disabled={\r\n//                   //   this.state.ProductQuantity && this.state.ProductQuantity > 0\r\n//                   //     ? false\r\n//                   //     : true\r\n//                   // }\r\n//                   onClick={(e) => {\r\n//                     this.handleAddToCart(e, params?.data);\r\n//                   }}\r\n//                   size=\"sm\"\r\n//                   color=\"primary\"\r\n//                   className=\"mx-1 addbutton\"\r\n//                   style={{\r\n//                     position: \"absolute\",\r\n//                     right: \"24px\",\r\n//                     padding: \"12px\",\r\n//                   }}\r\n//                 >\r\n//                   Add {this.state.ProductQuantity && this.state.ProductQuantity}\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       {\r\n//         headerName: \"PRICE\",\r\n//         field: \"price\",\r\n//         filter: \"agSetColumnFilter\",\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div className=\"d-flex align-items-center cursor-pointer\">\r\n//               <div className=\"\">\r\n//                 <span>{params.data?.price}</span>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n//       // {\r\n//       //   headerName: \"DiscountPrice\",\r\n//       //   field: \"discountprice\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{params.data?.discountprice}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Shipping Fee\",\r\n//       //   field: \"shipping_fee\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{params.data?.shipping_fee}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Tax Rate\",\r\n//       //   field: \"tax_rate\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{params.data?.tax_rate}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Tags\",\r\n//       //   field: \"tags\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{params.data?.tags}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"STOCK\",\r\n//       //   field: \"stock\",\r\n\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 150,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{ReactHtmlParser(params.data?.stock)}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Created \",\r\n//       //   field: \"created_date\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>\r\n//       //             {ReactHtmlParser(params.data?.created_date?.split(\" \")[0])}\r\n//       //           </span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"SALES\",\r\n//       //   field: \"pisces\",\r\n//       //   filter: \"agSetColumnFilter\",\r\n//       //   width: 120,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n//       //         <div className=\"\">\r\n//       //           <span>{ReactHtmlParser(params.data.pisces)}</span>\r\n//       //         </div>\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//       // {\r\n//       //   headerName: \"Actions\",\r\n//       //   field: \"transactions\",\r\n//       //   width: 150,\r\n//       //   cellRendererFramework: (params) => {\r\n//       //     return (\r\n//       //       <div className=\"actions cursor-pointer\">\r\n//       //         {/* {this.state.Viewpermisson && (\r\n//       //           <Eye\r\n//       //             className=\"mr-50\"\r\n//       //             size=\"25px\"\r\n//       //             color=\"green\"\r\n//       //             onClick={() =>\r\n//       //               history.push(\r\n//       //                 `/app/freshlist/order/viewAll/${params.data.id}`\r\n//       //               )\r\n//       //             }\r\n//       //           />\r\n//       //         )} */}\r\n//       //         {/* {this.state.Editpermisson && (\r\n//       //           <Edit\r\n//       //             className=\"mr-50\"\r\n//       //             size=\"25px\"\r\n//       //             color=\"blue\"\r\n//       //             onClick={() =>\r\n//       //               this.props.history.push({\r\n//       //                 pathname: `/app/freshlist/house/editmyproduct/${params.data?.id}`,\r\n//       //                 state: params.data,\r\n//       //               })\r\n//       //             }\r\n//       //           />\r\n//       //         )} */}\r\n//       //         {/* {this.state.Deletepermisson && (\r\n//       //           <Trash2\r\n//       //             className=\"mr-50\"\r\n//       //             size=\"25px\"\r\n//       //             color=\"Red\"\r\n//       //             onClick={() => {\r\n//       //               let selectedData = this.gridApi.getSelectedRows();\r\n\r\n//       //               this.runthisfunction(params.data?.id);\r\n//       //               this.gridApi.updateRowData({ remove: selectedData });\r\n//       //             }}\r\n//       //           />\r\n//       //         )} */}\r\n//       //       </div>\r\n//       //     );\r\n//       //   },\r\n//       // },\r\n//     ],\r\n//   };\r\n//   componentDidUpdate() {\r\n//     console.log(this.state.SelectedProduct);\r\n//   }\r\n//   async componentDidMount() {\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n//     let newparmisson = pageparmission?.role?.find(\r\n//       (value) => value?.pageName === \"Place Order\"\r\n//     );\r\n\r\n//     this.setState({ Viewpermisson: newparmisson?.permission.includes(\"View\") });\r\n//     this.setState({\r\n//       Createpermisson: newparmisson?.permission.includes(\"Create\"),\r\n//     });\r\n//     this.setState({\r\n//       Editpermisson: newparmisson?.permission.includes(\"Edit\"),\r\n//     });\r\n//     this.setState({\r\n//       Deletepermisson: newparmisson?.permission.includes(\"Delete\"),\r\n//     });\r\n\r\n//     const formdata = new FormData();\r\n//     formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     await axiosConfig\r\n//       .post(`/viewcart`, formdata)\r\n//       .then((res) => {\r\n//         this.setState({ productlength: res?.data?.data?.length });\r\n//       })\r\n//       .catch((err) => {\r\n//         console.log(err.response);\r\n//       });\r\n//     await axiosConfig\r\n//       // .post(\"/productlistapi\", formdata)\r\n//       .post(\"/getUserAssignproductList\", formdata)\r\n//       .then((response) => {\r\n//         console.log(response?.data.data[0].products);\r\n//         this.setState({ rowData: response?.data.data[0].products });\r\n//         // console.log(response.data.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response);\r\n//       });\r\n\r\n//     axiosConfig.post(\"/producttypelistview\", formdata).then((response) => {\r\n//       let Typelist = response.data.data;\r\n//       console.log(response);\r\n//       this.setState({ Typelist });\r\n//     });\r\n//   }\r\n//   handleAddToCart = (e, data) => {\r\n//     e.preventDefault();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     const formdata = new FormData();\r\n//     formdata.append(\"qty\", this.state.ProductQuantity);\r\n//     formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     formdata.append(\"product_id\", data?.id);\r\n//     formdata.append(\"price\", data?.price);\r\n//     if (this.state.ProductQuantity > 0) {\r\n//       axiosConfig\r\n//         .post(`/add_to_cart`, formdata)\r\n//         .then((res) => {\r\n//           this.setState({ ProductQuantity: \"\" });\r\n//           toast.success(`${this.state.ProductQuantity} Product Added`);\r\n//           // this.componentDidMount();\r\n//           axiosConfig\r\n//             .post(`/viewcart`, formdata)\r\n//             .then((res) => {\r\n//               this.setState({ productlength: res?.data?.data?.length });\r\n//             })\r\n//             .catch((err) => {\r\n//               console.log(err);\r\n//               swal(\"Something Went wrong with Cart\");\r\n//             });\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//     } else {\r\n//       // swal(\"Add Quantity first\");\r\n//     }\r\n//   };\r\n\r\n//   async runthisfunction(id) {\r\n//     console.log(id);\r\n//     let data = new FormData();\r\n//     data.append(\"id\", id);\r\n//     await axiosConfig\r\n//       .post(\"/deleteproduct\", data)\r\n//       .then((resp) => {\r\n//         console.log(resp);\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//       });\r\n//   }\r\n\r\n//   onGridReady = (params) => {\r\n//     this.gridApi = params.api;\r\n//     // console.log(params.api);\r\n//     this.gridColumnApi = params.columnApi;\r\n//     this.setState({\r\n//       currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n//       getPageSize: this.gridApi.paginationGetPageSize(),\r\n//       totalPages: this.gridApi.paginationGetTotalPages(),\r\n//     });\r\n//   };\r\n\r\n//   updateSearchQuery = (val) => {\r\n//     this.gridApi.setQuickFilter(val);\r\n//   };\r\n\r\n//   filterSize = (val) => {\r\n//     if (this.gridApi) {\r\n//       this.gridApi.paginationSetPageSize(Number(val));\r\n//       this.setState({\r\n//         currenPageSize: val,\r\n//         getPageSize: val,\r\n//       });\r\n//     }\r\n//   };\r\n//   render() {\r\n//     const { rowData, columnDefs, defaultColDef } = this.state;\r\n//     return (\r\n//       <>\r\n//         <ToastContainer />\r\n//         {/* <ToastContainer\r\n//           position=\"top-right\"\r\n//           autoClose={3000}\r\n//           hideProgressBar={false}\r\n//           newestOnTop={false}\r\n//           closeOnClick\r\n//           rtl={false}\r\n//           pauseOnFocusLoss\r\n//           draggable\r\n//           pauseOnHover\r\n//           theme=\"light\"\r\n//         /> */}\r\n\r\n//         <Row className=\"app-user-list\">\r\n//           <Col sm=\"12\">\r\n//             <Card>\r\n//               <Row className=\"m-2\">\r\n//                 <Col>\r\n//                   <h1 col-sm-6 className=\"float-left\">\r\n//                     Place Order\r\n//                   </h1>\r\n//                 </Col>\r\n\r\n//                 <Col lg=\"3\">\r\n//                   {this.state.productlength && this.state.productlength > 0 ? (\r\n//                     <>\r\n//                       <Route\r\n//                         render={({ history }) => (\r\n//                           <Button\r\n//                             className=\"float-right mt-1 mx-2\"\r\n//                             color=\"primary\"\r\n//                             // size=\"sm\"\r\n//                             onClick={() => {\r\n//                               // localStorage.setItem(\r\n//                               //   \"SelectedProduct\",\r\n//                               //   JSON.stringify(this.state.productlength)\r\n//                               // );\r\n//                               history.push(\r\n//                                 \"/app/freshlist/order/Selectedorder\"\r\n//                               );\r\n//                             }}\r\n//                           >\r\n//                             View Cart\r\n//                             <sup>{this.state.productlength}</sup>\r\n//                           </Button>\r\n//                         )}\r\n//                       />\r\n//                     </>\r\n//                   ) : null}\r\n\r\n//                   <Route\r\n//                     render={({ history }) => (\r\n//                       <Button\r\n//                         className=\"float-right mt-1 \"\r\n//                         color=\"primary\"\r\n//                         onClick={() =>\r\n//                           history.push(\"/app/softNumen/order/placeorder\")\r\n//                         }\r\n//                       >\r\n//                         Back\r\n//                       </Button>\r\n//                     )}\r\n//                   />\r\n//                 </Col>\r\n//               </Row>\r\n//               <CardBody>\r\n//                 {this.state.rowData === null ? null : (\r\n//                   <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n//                     <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n//                       <div className=\"mb-1\">\r\n//                         <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n//                           <DropdownToggle tag=\"div\">\r\n//                             {this.gridApi\r\n//                               ? this.state.currenPageSize\r\n//                               : \"\" * this.state.getPageSize -\r\n//                                 (this.state.getPageSize - 1)}{\" \"}\r\n//                             -{\" \"}\r\n//                             {this.state.rowData.length -\r\n//                               this.state.currenPageSize *\r\n//                                 this.state.getPageSize >\r\n//                             0\r\n//                               ? this.state.currenPageSize *\r\n//                                 this.state.getPageSize\r\n//                               : this.state.rowData.length}{\" \"}\r\n//                             of {this.state.rowData.length}\r\n//                             <ChevronDown className=\"ml-50\" size={15} />\r\n//                           </DropdownToggle>\r\n//                           <DropdownMenu right>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(20)}\r\n//                             >\r\n//                               20\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(50)}\r\n//                             >\r\n//                               50\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(100)}\r\n//                             >\r\n//                               100\r\n//                             </DropdownItem>\r\n//                             <DropdownItem\r\n//                               tag=\"div\"\r\n//                               onClick={() => this.filterSize(134)}\r\n//                             >\r\n//                               134\r\n//                             </DropdownItem>\r\n//                           </DropdownMenu>\r\n//                         </UncontrolledDropdown>\r\n//                       </div>\r\n//                       <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n//                         <div className=\" mr-1\">\r\n//                           <FormGroup>\r\n//                             <label className=\"\"> Choose Type *</label>\r\n//                           </FormGroup>\r\n//                         </div>\r\n//                         <div className=\" mr-1\">\r\n//                           <FormGroup>\r\n//                             <select\r\n//                               onChange={(e) => {\r\n//                                 this.setState({ Type: e.target.value });\r\n//                                 this.updateSearchQuery(e.target.value);\r\n//                               }}\r\n//                               className=\"form-control\"\r\n//                               name=\"Select\"\r\n//                               id=\"Select\"\r\n//                             >\r\n//                               <option value=\"\">--Select Type--</option>\r\n//                               {this.state.Typelist &&\r\n//                                 this.state.Typelist?.map((val, i) => (\r\n//                                   <option key={i} value={val?.product_type}>\r\n//                                     {val?.product_type}\r\n//                                   </option>\r\n//                                 ))}\r\n//                             </select>\r\n//                           </FormGroup>\r\n//                         </div>\r\n//                         <div className=\"table-input mr-1\">\r\n//                           <Input\r\n//                             placeholder=\"search...\"\r\n//                             onChange={(e) =>\r\n//                               this.updateSearchQuery(e.target.value)\r\n//                             }\r\n//                             value={this.state.value}\r\n//                           />\r\n//                         </div>\r\n//                         <div className=\"export-btn\">\r\n//                           <Button.Ripple\r\n//                             color=\"primary\"\r\n//                             onClick={() => this.gridApi.exportDataAsCsv()}\r\n//                           >\r\n//                             Export as CSV\r\n//                           </Button.Ripple>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                     <ContextLayout.Consumer>\r\n//                       {(context) => (\r\n//                         <AgGridReact\r\n//                           gridOptions={{}}\r\n//                           rowSelection=\"multiple\"\r\n//                           defaultColDef={defaultColDef}\r\n//                           columnDefs={columnDefs}\r\n//                           rowData={rowData}\r\n//                           onGridReady={this.onGridReady}\r\n//                           colResizeDefault={\"shift\"}\r\n//                           animateRows={true}\r\n//                           floatingFilter={false}\r\n//                           pagination={true}\r\n//                           paginationPageSize={this.state.paginationPageSize}\r\n//                           pivotPanelShow=\"always\"\r\n//                           enableRtl={context.state.direction === \"rtl\"}\r\n//                         />\r\n//                       )}\r\n//                     </ContextLayout.Consumer>\r\n//                   </div>\r\n//                 )}\r\n//               </CardBody>\r\n//             </Card>\r\n//           </Col>\r\n//         </Row>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n// export default Placeorder;\r\n\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\n\r\nconst CreateAccount = () => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const createUserXmlView = useContext(UserContext);\r\n  // const [selectedCountry, setSelectedCountry] = useState(null);\r\n  // const [selectedState, setSelectedState] = useState(null);\r\n  // const [selectedCity, setSelectedCity] = useState(null);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData));\r\n        let origionalpermission =\r\n          JSON.parse(jsonData)?.CreateAccount?.input[14].permissions?.role;\r\n        // const rolePermissions = origionalpermission?.find(\r\n        //   (role) => role._attributes?.name === \"SUPERADMIN\"\r\n        // );\r\n        // console.log(rolePermissions);\r\n        // setpermissions(rolePermissions);\r\n        // console.log(permissions);\r\n        // console.log(rolePermissions?.canCreateUser._text.includes(\"true\"));\r\n        // console.log(rolePermissions?.canEditProfile._text.includes(\"true\"));\r\n        // console.log(rolePermissions?.canCreateUser._text.includes(\"true\"));\r\n\r\n        setCreatAccountView(JSON.parse(jsonData));\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateAccountSave(formData)\r\n        .then((res) => {\r\n          if (res.status) {\r\n            setFormData({});\r\n            window.location.reload();\r\n            swal(\"Acccont Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Order</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n                      {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.CreateAccount?.input?.map((ele, i) => {\r\n                    let View = \"\";\r\n                    let Edit = \"\";\r\n                    if (ele?.role) {\r\n                      let roles = ele?.role?.find(\r\n                        (role) => role._attributes?.name === \"WARRANTY APPROVER\"\r\n                      );\r\n\r\n                      View = roles?.permissions?._text.includes(\"View\");\r\n                      Edit = roles?.permissions?._text.includes(\"Edit\");\r\n                      {\r\n                        /* console.log(View, Edit); */\r\n                      }\r\n                    }\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          {/* {Edit && Edit ? ( */}\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <PhoneInput\r\n                                  inputClass=\"myphoneinput\"\r\n                                  country={\"us\"}\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  countryCodeEditable={false}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(phone) => {\r\n                                    setFormData({\r\n                                      ...formData,\r\n                                      [ele?.name?._text]: phone,\r\n                                    });\r\n                                  }}\r\n                                  // onChange={handleInputChange}\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                          {/* ) : (\r\n                            <>\r\n                              {View && View ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label>{ele?.label?._text}</Label>\r\n                                      <PhoneInput\r\n                                        disabled\r\n                                        inputClass=\"myphoneinput\"\r\n                                        country={\"us\"}\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        countryCodeEditable={false}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(phone) => {\r\n                                          setFormData({\r\n                                            ...formData,\r\n                                            [ele?.name?._text]: phone,\r\n                                          });\r\n                                        }}\r\n                                        // onChange={handleInputChange}\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : null}\r\n                            </>\r\n                          )} */}\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.country}\r\n                                onChange={(country) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"country\"]: country,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  formData?.country?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.State}\r\n                                onChange={(State) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  formData?.State?.countryCode,\r\n                                  formData?.State?.isoCode\r\n                                )}\r\n                                getOptionLabel={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={(options) => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={formData.City}\r\n                                onChange={(City) => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          {/* {Edit && Edit ? ( */}\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={(e) => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                          {/* ) : (\r\n                            <>\r\n                              {View && View ? (\r\n                                <>\r\n                                  <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                    <FormGroup>\r\n                                      <Label>{ele?.label?._text}</Label>\r\n\r\n                                      <Input\r\n                                        disabled\r\n                                        onKeyDown={(e) => {\r\n                                          if (\r\n                                            ele?.type?._attributes?.type ==\r\n                                            \"number\"\r\n                                          ) {\r\n                                            [\"e\", \"E\", \"+\", \"-\"].includes(\r\n                                              e.key\r\n                                            ) && e.preventDefault();\r\n                                          }\r\n                                        }}\r\n                                        type={ele?.type?._attributes?.type}\r\n                                        placeholder={ele?.placeholder?._text}\r\n                                        name={ele?.name?._text}\r\n                                        value={formData[ele?.name?._text]}\r\n                                        onChange={(e) =>\r\n                                          handleInputChange(\r\n                                            e,\r\n                                            ele?.type?._attributes?.type,\r\n                                            i\r\n                                          )\r\n                                        }\r\n                                      />\r\n                                      {index === i ? (\r\n                                        <>\r\n                                          {error && (\r\n                                            <span style={{ color: \"red\" }}>\r\n                                              {error}\r\n                                            </span>\r\n                                          )}\r\n                                        </>\r\n                                      ) : (\r\n                                        <></>\r\n                                      )}\r\n                                    </FormGroup>\r\n                                  </Col>\r\n                                </>\r\n                              ) : null}\r\n                            </>\r\n                          )} */}\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n\r\n                <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />{\" \"}\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                  {/* <BsWhatsapp\r\n                              className=\"mx-1\"\r\n                              color=\"#59CE72\"\r\n                              size={25}\r\n                            /> */}\r\n                                </span>\r\n                              </span>\r\n                              {/* <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Input\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={(e) =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                            </FormGroup>\r\n                          </Col> */}\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n\r\n              <hr />\r\n              <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n","export const findEntryByCode = (source, code) => {\n    if (code && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport const findStateByCodeAndCountryCode = (source, code, countryCode) => {\n    if (code && countryCode && source != null) {\n        const codex = source.findIndex((c) => {\n            return c.isoCode === code && c.countryCode === countryCode;\n        });\n        return codex !== -1 ? source[codex] : undefined;\n    }\n    return undefined;\n};\nexport function defaultKeyToCompare(entity) {\n    return entity.name;\n}\nexport const compare = (a, b, \n// eslint-disable-next-line no-unused-vars\nkeyToCompare = defaultKeyToCompare) => {\n    if (keyToCompare(a) < keyToCompare(b))\n        return -1;\n    if (keyToCompare(a) > keyToCompare(b))\n        return 1;\n    return 0;\n};\n","import stateList from './assets/state.json';\nimport { findEntryByCode, findStateByCodeAndCountryCode, compare } from './utils';\n// Get a list of all states.\nexport function getAllStates() {\n    return stateList;\n}\n// Get a list of states belonging to a specific country.\nexport function getStatesOfCountry(countryCode = '') {\n    if (!countryCode)\n        return [];\n    // get data from file or cache\n    const states = stateList.filter((value) => {\n        return value.countryCode === countryCode;\n    });\n    return states.sort(compare);\n}\nexport function getStateByCodeAndCountry(stateCode, countryCode) {\n    if (!stateCode)\n        return undefined;\n    if (!countryCode)\n        return undefined;\n    return findStateByCodeAndCountryCode(stateList, stateCode, countryCode);\n}\n// to be deprecate\nexport function getStateByCode(isoCode) {\n    // eslint-disable-next-line no-console\n    console.warn(`WARNING! 'getStateByCode' has been deprecated, please use the new 'getStateByCodeAndCountry' function instead!`);\n    if (!isoCode)\n        return undefined;\n    return findEntryByCode(stateList, isoCode);\n}\nfunction sortByIsoCode(countries) {\n    return countries.sort((a, b) => {\n        return compare(a, b, (entity) => {\n            return `${entity.countryCode}-${entity.isoCode}`;\n        });\n    });\n}\nexport default {\n    getAllStates,\n    getStatesOfCountry,\n    getStateByCodeAndCountry,\n    getStateByCode,\n    sortByIsoCode,\n};\n","import countryList from './assets/country.json';\nimport { compare, findEntryByCode } from './utils';\n// Get a country by isoCode.\nfunction getCountryByCode(isoCode) {\n    if (!isoCode)\n        return undefined;\n    return findEntryByCode(countryList, isoCode);\n}\n// Get a list of all countries.\nfunction getAllCountries() {\n    return countryList;\n}\nfunction sortByIsoCode(countries) {\n    return countries.sort((a, b) => {\n        return compare(a, b, (entity) => {\n            return entity.isoCode;\n        });\n    });\n}\nexport default {\n    getCountryByCode,\n    getAllCountries,\n    sortByIsoCode,\n};\n","import cityList from './assets/city.json';\nimport { compare } from './utils';\n// Get a list of all cities.\nfunction getAllCities() {\n    return cityList;\n}\n// Get a list of cities belonging to a specific state and country.\nfunction getCitiesOfState(countryCode, stateCode) {\n    if (!stateCode)\n        return [];\n    if (!countryCode)\n        return [];\n    const cities = cityList.filter((value) => {\n        return value.countryCode === countryCode && value.stateCode === stateCode;\n    });\n    return cities.sort(compare);\n}\n// Get a list of cities belonging to a specific country.\nfunction getCitiesOfCountry(countryCode) {\n    if (!countryCode)\n        return [];\n    const cities = cityList.filter((value) => {\n        return value.countryCode === countryCode;\n    });\n    return cities.sort(compare);\n}\nfunction sortByStateAndName(cities) {\n    return cities.sort((a, b) => {\n        const result = compare(a, b, (entity) => {\n            return `${entity.countryCode}-${entity.stateCode}`;\n        });\n        if (result !== 0)\n            return result;\n        return compare(a, b);\n    });\n}\nexport default {\n    getAllCities,\n    getCitiesOfState,\n    getCitiesOfCountry,\n    sortByStateAndName,\n};\n"],"sourceRoot":""}