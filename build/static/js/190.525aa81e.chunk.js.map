{"version":3,"sources":["../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx","views/apps/freshlist/house/AddProduct.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","c","_this","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","this","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","setState","length","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","displayValue","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","push","create","onSearch","value","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","loading","className","optionContainer","notFound","t","keys","map","Fragment","obj","groupHeading","option","isSelected","_this6","onClick","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","disabled","onMouseDown","preventDefault","render","Component","defaultProps","selectItem1","AddProduct","useState","setViewpermisson","setEditpermisson","setCreatepermisson","setDeletepermisson","fullname","setfullname","GSTIN","setGSTIN","StateList","setStateList","CityList","setCityList","SelectedState","setSelectedState","B_City","setB_City","checkbox","setcheckbox","S_City","setS_City","Mobile_no","setMobile_no","B_Country","setB_Country","S_Country","setS_Country","Phone_no","setPhone_no","Place_of_Supply","setPlace_of_Supply","B_State","setB_State","S_State","setS_State","B_Street","setB_Street","S_Street","setS_Street","B_PinCode","setB_PinCode","S_PinCode","setS_PinCode","multiSelect","setmultiSelect","selectedOptions","password","setpassword","email","setemail","status","setstatus","AssignRole","setAssignRole","CompanyName","setCompanyName","Companytype","setCompanytype","UserName","setUserName","productName","setproductName","setCity","partname","partseriel","quantity","formValues","setFormValues","pageparmission","parse","localStorage","getItem","newparmisson","role","find","pageName","permission","includes","formdata","FormData","append","Userinfo","axiosConfig","post","then","response","propertyNames","values","data","roles","get","states","catch","error","console","log","onSelect1","selectedList","selectedItem","arr","ele","uniqueChars","Set","res","cities","err","onRemove1","removedItem","handleChange","newFormValues","onSubmit","alert","color","removeFormFields","selectedOption","success","swal","lg","md","for","required","sm","maxLength","size","min","state_title","height","width","marginRight","Ripple","_excluded","propTypes","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","call","getRef","_assertThisInitialized","submit","_inheritsLoose","prototype","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends","row","check","FormGroup"],"mappings":"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","file":"static/js/190.525aa81e.chunk.js","sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n","// import React, { Component } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Col,\r\n//   Form,\r\n//   Row,\r\n//   Input,\r\n//   Label,\r\n//   Button,\r\n//   FormGroup,\r\n//   CustomInput,\r\n// } from \"reactstrap\";\r\n// import { history } from \"../../../../history\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import { Route } from \"react-router-dom\";\r\n// import swal from \"sweetalert\";\r\n// import { CloudLightning } from \"react-feather\";\r\n// import { ResponsiveContainer } from \"recharts\";\r\n\r\n// export class AddProduct extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       category_name: \"\",\r\n//       Brand: \"\",\r\n//       P_Title: \"\",\r\n//       Type: \"\",\r\n//       Price: \"\",\r\n//       stock: \"\",\r\n//       Regularprice: \"\",\r\n//       formValues: [{ PName: \"\", price: \"\" }],\r\n//       DiscountPrice: \"\",\r\n//       Addmore: false,\r\n//       rowData: [],\r\n//       TypeList: [],\r\n//       description: \"\",\r\n//       variety: \"\",\r\n//       shipmentfee: \"\",\r\n//       Tags: \"\",\r\n//       taxrate: \"\",\r\n//       status: \"\",\r\n//       // selectedFile1: null,\r\n//       // selectedName1: \"\",\r\n//       // selectedFile2: null,\r\n//       // selectedName2: \"\",\r\n//       selectedFile3: [],\r\n//       selectedName3: \"\",\r\n//       // selectedFile4: null,\r\n//       // selectedName4: \"\",\r\n//     };\r\n//     this.handleSubmit = this.handleSubmit.bind(this);\r\n//   }\r\n//   async componentDidMount() {\r\n//     const data = new FormData();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     await axiosConfig.post(\"/getcategory\", data).then((response) => {\r\n//       let rowData = response.data.data?.category;\r\n//       console.log(rowData);\r\n//       if (rowData) {\r\n//         this.setState({ rowData });\r\n//       }\r\n//     });\r\n//     const type = new FormData();\r\n//     // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     type.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     type.append(\"role\", pageparmission?.Userinfo?.role);\r\n\r\n//     const brand = new FormData();\r\n//     // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     brand.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     brand.append(\"role\", pageparmission?.Userinfo?.role);\r\n//     await axiosConfig.post(\"/getbrand\", brand).then((response) => {\r\n//       let Brandlist = response.data.data?.brands;\r\n//       console.log(response);\r\n//       if (Brandlist) {\r\n//         this.setState({ Brandlist });\r\n//       }\r\n//     });\r\n//     await axiosConfig.post(\"/producttypelistview\", type).then((response) => {\r\n//       let TypeList = response.data.data;\r\n//       console.log(TypeList);\r\n//       if (TypeList) {\r\n//         this.setState({ TypeList });\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   handleChange(i, e) {\r\n//     let formValues = this.state.formValues;\r\n//     formValues[i][e.target.name] = e.target.value;\r\n//     this.setState({ formValues });\r\n//   }\r\n\r\n//   addFormFields() {\r\n//     this.setState({\r\n//       formValues: [...this.state.formValues, { PName: \"\", price: \"\" }],\r\n//     });\r\n//     this.handleSubmit();\r\n//   }\r\n\r\n//   removeFormFields(i) {\r\n//     let formValues = this.state.formValues;\r\n//     formValues.splice(i, 1);\r\n//     this.setState({ formValues });\r\n//   }\r\n\r\n//   handleSubmit() {\r\n//     console.log(this.state.formValues);\r\n//   }\r\n\r\n//   // onChangeHandler1 = (event) => {\r\n//   //   this.setState({ selectedFile1: event.target.files[0] });\r\n//   //   this.setState({ selectedName1: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n//   // onChangeHandler2 = (event) => {\r\n//   //   this.setState({ selectedFile2: event.target.files[0] });\r\n//   //   this.setState({ selectedName2: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n//   onChangeHandler3 = (event) => {\r\n//     let selectedName = Array.from(event.target.files);\r\n//     console.log(selectedName);\r\n//     this.setState({ selectedFile3: selectedName });\r\n\r\n//     // this.setState({ selectedFile3: event.target.files });\r\n//     // this.setState({ selectedName3: event.target.files[0].name });\r\n//     // console.log(event.target.files);\r\n//   };\r\n//   // onChangeHandler4 = (event) => {\r\n//   //   this.setState({ selectedFile4: event.target.files[0] });\r\n//   //   this.setState({ selectedName4: event.target.files[0].name });\r\n//   //   console.log(event.target.files[0]);\r\n//   // };\r\n\r\n//   changeHandler1 = (e) => {\r\n//     this.setState({ status: e.target.value });\r\n//   };\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     const data = new FormData();\r\n//     let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n//     // console.log(pageparmission?.Userinfo?.id);\r\n//     data.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n//     data.append(\"brand_id\", this.state.Brand);\r\n//     data.append(\"product_type_id\", this.state.Type);\r\n//     data.append(\"title\", this.state.P_Title);\r\n//     if (this.state.formValues.length > 0) {\r\n//       data.append(\"veriety\", JSON.stringify(this.state.formValues));\r\n//     }\r\n//     data.append(\"category_id\", this.state.category_name);\r\n//     // data.append(\"stock\", this.state.stock);\r\n//     data.append(\"price\", this.state.Price);\r\n//     data.append(\"discountprice\", this.state.DiscountPrice);\r\n//     data.append(\"description\", this.state.description);\r\n//     data.append(\"shipping_fee\", this.state.shipmentfee);\r\n//     data.append(\"tax_rate\", this.state.taxrate);\r\n//     data.append(\"tags\", this.state.Tags);\r\n//     data.append(\"status\", \"Active\");\r\n//     // this.state.selectedFile3.forEach((image, index) => {\r\n//     //   data.append(`image`, image);\r\n//     // });\r\n//     // debugger;\r\n//     for (let i = 0; i < this.state.selectedFile3?.length; i++) {\r\n//       data.append(\"images[]\", this.state.selectedFile3[i]);\r\n//     }\r\n//     // for (const file of this.state.selectedFile3) {\r\n//     //   if (this.state.selectedFile3 !== null) {\r\n//     //     data.append(\"image_name\", file);\r\n//     //   }\r\n//     // }\r\n\r\n//     axiosConfig\r\n//       .post(`/addproduct`, data, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data; \",\r\n//         },\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         if (response.data.success) {\r\n//           swal(\"Success!\", \"You Data is been Submitted\", \"success\");\r\n//           // this.props.history.push(\"/app/freshlist/category/categoryList\");\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Card>\r\n//           <h1 className=\"p-2 \">Product Upload</h1>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               <h2>Basic Information</h2>\r\n//             </Col>\r\n//             {/* <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\" btn btn-danger float-right\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/freshlist/category/categoryList\")\r\n//                     }\r\n//                   >\r\n//                     Back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col> */}\r\n//           </Row>\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n//               <Row className=\"mb-2\">\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Category *</Label>\r\n\r\n//                     <select\r\n//                       onChange={(e) =>\r\n//                         this.setState({ category_name: e.target.value })\r\n//                       }\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Category--</option>\r\n//                       {this.state.rowData &&\r\n//                         this.state.rowData?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.category_name}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                     {/* <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"category_name\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.category_name}\r\n//                       onChange={this.changeHandler}\r\n//                     /> */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Type *</Label>\r\n\r\n//                     <select\r\n//                       onChange={(e) => this.setState({ Type: e.target.value })}\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Type--</option>\r\n//                       {this.state.TypeList &&\r\n//                         this.state.TypeList?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.product_type}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                     {/* <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"category_name\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.category_name}\r\n//                       onChange={this.changeHandler}\r\n//                     /> */}\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Choose Brand *</Label>\r\n\r\n//                     <select\r\n//                       required\r\n//                       onChange={(e) => this.setState({ Brand: e.target.value })}\r\n//                       className=\"form-control\"\r\n//                       name=\"Select\"\r\n//                       id=\"Select\"\r\n//                     >\r\n//                       <option value=\"volvo\">--Select Brand--</option>\r\n//                       {this.state.Brandlist &&\r\n//                         this.state.Brandlist?.map((val, i) => (\r\n//                           <option key={i} value={val?.id}>\r\n//                             {val?.brand_name}\r\n//                           </option>\r\n//                         ))}\r\n//                     </select>\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Title</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Title\"\r\n//                       name=\"P_Title\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.P_Title}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"12\" md=\"12\">\r\n//                   <FormGroup>\r\n//                     <Label>Description</Label>\r\n//                     <textarea\r\n//                       type=\"text\"\r\n//                       rows={5}\r\n//                       className=\"form-control\"\r\n//                       placeholder=\"Description ...\"\r\n//                       name=\"description\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.description}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> PRICE (₹)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Amount In Number\"\r\n//                       name=\"Price\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.Price}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <Row>\r\n//                     <Col lg=\"2\" sm=\"2\" md=\"2\">\r\n//                       <div>\r\n//                         <h5 className=\"mt-2\"> OR</h5>\r\n//                       </div>\r\n//                     </Col>\r\n//                     <Col>\r\n//                       <FormGroup>\r\n//                         <Button\r\n//                           style={{ width: \"100%\" }}\r\n//                           color=\"primary\"\r\n//                           className=\"button add mt-2\"\r\n//                           type=\"button\"\r\n//                           // onClick={() => this.addFormFields()}\r\n//                           onClick={() => this.setState({ Addmore: true })}\r\n//                         >\r\n//                           Add\r\n//                         </Button>\r\n\r\n//                         {/* <Label>Variety</Label>\r\n//                         <Input\r\n//                           type=\"text\"\r\n//                           placeholder=\"Variety...\"\r\n//                           name=\"variety\"\r\n//                           bsSize=\"lg\"\r\n//                           value={this.state.variety}\r\n//                           onChange={this.changeHandler}\r\n//                         /> */}\r\n//                       </FormGroup>\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </Col>{\" \"}\r\n//               </Row>\r\n//               {this.state.Addmore ? (\r\n//                 <>\r\n//                   <Row>\r\n//                     <Col lg=\"12\">\r\n//                       {this.state.formValues.map((element, index) => (\r\n//                         <div className=\"\" key={index}>\r\n//                           <Row className=\"py-1\">\r\n//                             <Col lg=\"4\" sm=\"4\">\r\n//                               <label>Product Name</label>\r\n//                               <input\r\n//                                 className=\"form-control\"\r\n//                                 type=\"text\"\r\n//                                 name=\"PName\"\r\n//                                 value={element.PName || \"\"}\r\n//                                 onChange={(e) => this.handleChange(index, e)}\r\n//                               />\r\n//                             </Col>\r\n//                             <Col lg=\"4\" sm=\"4\">\r\n//                               <label>Price</label>\r\n//                               <input\r\n//                                 onKeyDown={(e) =>\r\n//                                   [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                                   e.preventDefault()\r\n//                                 }\r\n//                                 min={0}\r\n//                                 className=\"form-control\"\r\n//                                 type=\"number\"\r\n//                                 name=\"price\"\r\n//                                 value={element.price || \"\"}\r\n//                                 onChange={(e) => this.handleChange(index, e)}\r\n//                               />\r\n//                             </Col>\r\n//                             <Col>\r\n//                               {index ? (\r\n//                                 <Button\r\n//                                   color=\"primary\"\r\n//                                   type=\"button\"\r\n//                                   className=\"button remove mt-2\"\r\n//                                   onClick={() => this.removeFormFields(index)}\r\n//                                 >\r\n//                                   Remove\r\n//                                 </Button>\r\n//                               ) : null}\r\n//                               <Button\r\n//                                 color=\"primary\"\r\n//                                 className=\"button add mt-2  mx-3\"\r\n//                                 type=\"button\"\r\n//                                 onClick={() => this.addFormFields()}\r\n//                               >\r\n//                                 Add\r\n//                               </Button>\r\n//                             </Col>\r\n//                           </Row>\r\n//                         </div>\r\n//                       ))}\r\n//                     </Col>\r\n//                   </Row>\r\n//                 </>\r\n//               ) : null}\r\n\r\n//               <Row>\r\n//                 {/* <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label> Quantity </Label>\r\n//                     <Input\r\n//                       type=\"number\"\r\n//                       placeholder=\"in Number\"\r\n//                       name=\"stock\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.stock}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col> */}\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Discount Price</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Discount Price\"\r\n//                       name=\"DiscountPrice\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.DiscountPrice}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>SHIPPING FEE(₹)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Number...\"\r\n//                       name=\"shipmentfee\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.shipmentfee}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>TAX RATE (%)</Label>\r\n//                     <Input\r\n//                       onKeyDown={(e) =>\r\n//                         [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n//                         e.preventDefault()\r\n//                       }\r\n//                       min={0}\r\n//                       type=\"number\"\r\n//                       placeholder=\"Tax in Percentage\"\r\n//                       name=\"taxrate\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.taxrate}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//                 <Col lg=\"6\" md=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>TAGS</Label>\r\n//                     <Input\r\n//                       type=\"text\"\r\n//                       placeholder=\"Type here...\"\r\n//                       name=\"Tags\"\r\n//                       bsSize=\"lg\"\r\n//                       value={this.state.Tags}\r\n//                       onChange={this.changeHandler}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Col lg=\"6\" sm=\"6\">\r\n//                   <FormGroup>\r\n//                     <Label>Media & Published (Select multiple files)</Label>\r\n//                     <CustomInput\r\n//                       multiple\r\n//                       style={{ cursor: \"pointer\" }}\r\n//                       accept=\"image/png,image/jpeg,image/jpg\"\r\n//                       name=\"image[]\"\r\n//                       type=\"file\"\r\n//                       onChange={this.onChangeHandler3}\r\n//                     />\r\n//                   </FormGroup>\r\n//                 </Col>\r\n//               </Row>\r\n//               <Row>\r\n//                 <Button.Ripple\r\n//                   color=\"primary\"\r\n//                   type=\"submit\"\r\n//                   className=\"mr-1 mb-1\"\r\n//                 >\r\n//                   Add Product\r\n//                 </Button.Ripple>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default AddProduct;\r\n\r\n// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nconst selectItem1 = [];\r\nconst selectstate2 = [];\r\n\r\nconst AllunSelectedCity = [];\r\nconst Selectedarray = [];\r\n\r\nconst AddProduct = () => {\r\n  // const [Address, setAddress] = useState(\"\");\r\n  const [Viewpermisson, setViewpermisson] = useState(null);\r\n  const [Editpermisson, setEditpermisson] = useState(null);\r\n  const [Createpermisson, setCreatepermisson] = useState(null);\r\n  const [Deletepermisson, setDeletepermisson] = useState(null);\r\n  const [fullname, setfullname] = useState(\"\");\r\n  const [GSTIN, setGSTIN] = useState(\"\");\r\n  const [StateList, setStateList] = useState([]);\r\n  const [CityList, setCityList] = useState([]);\r\n  const [SelectedSCity, setSelectedSCity] = useState([]);\r\n  const [SelectedState, setSelectedState] = useState([]);\r\n  const [B_City, setB_City] = useState(\"\");\r\n  const [checkbox, setcheckbox] = useState(\"\");\r\n  const [S_City, setS_City] = useState(\"\");\r\n  const [Mobile_no, setMobile_no] = useState(\"\");\r\n  const [B_Country, setB_Country] = useState(\"\");\r\n  const [S_Country, setS_Country] = useState(\"\");\r\n  const [Phone_no, setPhone_no] = useState(\"\");\r\n  const [Place_of_Supply, setPlace_of_Supply] = useState(\"\");\r\n  const [B_State, setB_State] = useState(\"\");\r\n  const [S_State, setS_State] = useState(\"\");\r\n  const [B_Street, setB_Street] = useState(\"\");\r\n  const [S_Street, setS_Street] = useState(\"\");\r\n  const [B_PinCode, setB_PinCode] = useState(\"\");\r\n  const [S_PinCode, setS_PinCode] = useState(\"\");\r\n  const [setuserList, setsetuserList] = useState(false);\r\n  const [multiSelect, setmultiSelect] = useState([]);\r\n  const [selectedOptions, setselectedOptions] = useState([]);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [status, setstatus] = useState(\"\");\r\n  const [AssignRole, setAssignRole] = useState(\"\");\r\n  const [CompanyName, setCompanyName] = useState(\"\");\r\n  const [Companytype, setCompanytype] = useState(\"\");\r\n  const [Selectuser, setSelectuser] = useState(\"\");\r\n  const [UserName, setUserName] = useState(\"\");\r\n  const [productName, setproductName] = useState([]);\r\n  const [City, setCity] = useState(\"\");\r\n  const [formValues, setFormValues] = useState([\r\n    { partname: \"\", partseriel: \"\", quantity: \"\" },\r\n  ]);\r\n  useEffect(() => {\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let newparmisson = pageparmission?.role?.find(\r\n      value => value?.pageName === \"Create Account\"\r\n    );\r\n    setViewpermisson(newparmisson?.permission.includes(\"View\"));\r\n    setCreatepermisson(newparmisson?.permission.includes(\"Create\"));\r\n    setEditpermisson(newparmisson?.permission.includes(\"Edit\"));\r\n\r\n    setDeletepermisson(newparmisson?.permission.includes(\"Delete\"));\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"user_id\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"role\", pageparmission?.Userinfo?.role);\r\n    axiosConfig.post(\"/getrolelistdropdown\", formdata).then(response => {\r\n      // console.log(response);\r\n      const propertyNames = Object.values(response.data?.data?.roles);\r\n\r\n      // console.log(propertyNames);\r\n      setproductName(propertyNames);\r\n    });\r\n    // state List\r\n    axiosConfig\r\n      .get(\"/getallstates\")\r\n      .then(response => {\r\n        setStateList(response.data?.states);\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    let uniqueChars = [...new Set(selectItem1)];\r\n    let selectedOption = [...new Set(selectedOptions)];\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append(\"created_by\", pageparmission?.Userinfo?.id);\r\n    formdata.append(\"password\", password);\r\n    formdata.append(\"full_name\", fullname);\r\n    formdata.append(\"gstin_no\", GSTIN);\r\n    formdata.append(\"username\", UserName);\r\n    formdata.append(\"city\", B_City);\r\n    formdata.append(\"mobile\", Mobile_no);\r\n    formdata.append(\"email\", email);\r\n    formdata.append(\"status\", status);\r\n    formdata.append(\"role\", AssignRole);\r\n    formdata.append(\"company_name\", CompanyName);\r\n    formdata.append(\"company_type\", Companytype);\r\n    formdata.append(\"place_supply\", Place_of_Supply);\r\n    formdata.append(\"billing_street\", B_Street);\r\n    formdata.append(\"billing_city\", B_City);\r\n    formdata.append(\"billing_state\", B_State);\r\n    formdata.append(\"billing_country\", B_Country);\r\n    formdata.append(\"billing_pincode\", B_PinCode);\r\n    formdata.append(\"shipping_street\", S_Street);\r\n    formdata.append(\"shipping_city\", S_City);\r\n    formdata.append(\"shipping_state\", S_State);\r\n    formdata.append(\"shipping_country\", S_Country);\r\n    formdata.append(\"shipping_pincode\", S_PinCode);\r\n    formdata.append(\"phone_no\", Phone_no);\r\n    if (selectedOption.length > 0) {\r\n      formdata.append(\"state_id\", multiSelect.toString());\r\n    } else {\r\n      formdata.append(\"state_id\", SelectedState);\r\n    }\r\n\r\n    formdata.append(\"city_id\", uniqueChars);\r\n\r\n    axiosConfig\r\n      .post(\"/createuser\", formdata)\r\n      .then(response => {\r\n        if (response.data?.success) {\r\n          swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n          setAssignRole(\"\");\r\n          setstatus(\"\");\r\n          setemail(\"\");\r\n          setCity(\"\");\r\n          setPhone_no(\"\");\r\n          setUserName(\"\");\r\n          setfullname(\"\");\r\n          setpassword(\"\");\r\n          setS_Country(\"\");\r\n          setS_State(\"\");\r\n          setS_City(\"\");\r\n          setS_Street(\"\");\r\n          setS_PinCode(\"\");\r\n        }\r\n        // this.props.history.push(\"/app/softNumen/order/placeorder\");\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleMatchaddress = (e, value) => {\r\n    setcheckbox(value);\r\n    if (value) {\r\n      setS_Country(B_Country);\r\n      setS_State(B_State);\r\n      setS_City(B_City);\r\n      setS_Street(B_Street);\r\n      setS_PinCode(B_PinCode);\r\n    } else {\r\n      setS_Country(\"\");\r\n      setS_State(\"\");\r\n      setS_City(\"\");\r\n      setS_Street(\"\");\r\n      setS_PinCode(\"\");\r\n    }\r\n  };\r\n  const onSelect = (selectedList, selectedItem) => {\r\n    console.log(selectedList);\r\n\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectItem1.push(selectedList[i].id);\r\n      }\r\n    }\r\n  };\r\n  const onSelect1 = (selectedList, selectedItem) => {\r\n    if (selectedList.length) {\r\n      for (var i = 0; i < selectedList.length; i++) {\r\n        selectedOptions.push(selectedList[i].id);\r\n      }\r\n    }\r\n\r\n    let arr = selectedList.map(ele => ele.id);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n\r\n    let uniqueChars = [...new Set(selectedOptions)];\r\n\r\n    if (uniqueChars.length === 1) {\r\n      let value = uniqueChars[0];\r\n      const formdata = new FormData();\r\n      formdata.append(\"state_id\", value);\r\n      axiosConfig\r\n        .post(`/getcity`, formdata)\r\n        .then(res => {\r\n          setCityList(res?.data?.cities);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      setCityList([]);\r\n    }\r\n  };\r\n  const onRemove1 = (selectedList, removedItem) => {\r\n    // debugger;\r\n    // setselectedOptions(\"\");\r\n    // console.log(selectedList);\r\n    // setmultiSelect(selectedList);\r\n\r\n    let arr = selectedList.map(ele => ele.id);\r\n    // console.log(arr);\r\n    setmultiSelect(arr);\r\n    // console.log(multiSelect);\r\n    // if (selectedList.length) {\r\n    //   for (var i = 0; i < selectedList.length; i++) {\r\n    //     selectedOptions.push(selectedList[i].id);\r\n    //   }\r\n    // }\r\n    // let uniqueChars = [...new Set(selectedOptions)];\r\n    // console.log(uniqueChars);\r\n  };\r\n\r\n  const onRemove = (selectedList, removedItem) => {\r\n    console.log(selectedList);\r\n    console.log(removedItem);\r\n  };\r\n\r\n  let handleChange = (i, e) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let addFormFields = () => {\r\n    setFormValues([...formValues, { name: \"\", partseriel: \"\", quantity: \"\" }]);\r\n  };\r\n\r\n  let removeFormFields = i => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let handleSubmit = event => {\r\n    event.preventDefault();\r\n    alert(JSON.stringify(formValues));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Add here</h1>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"container \">\r\n            <form onSubmit={handleSubmit}>\r\n              {formValues.map((element, index) => (\r\n                <div className=\"form-inline my-2\" key={index}>\r\n                  <FormGroup>\r\n                    <Label>Part Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Part Name\"\r\n                      value={element.name || \"\"}\r\n                      onChange={e => handleChange(index, e)}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <Label>Part Serial No.</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"partseriel\"\r\n                    placeholder=\"Part Seriel\"\r\n                    value={element.partseriel || \"\"}\r\n                    onChange={e => handleChange(index, e)}\r\n                  />\r\n                  <Label>Quantity </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"quantity\"\r\n                    placeholder=\"Quantity\"\r\n                    value={element.quantity || \"\"}\r\n                    onChange={e => handleChange(index, e)}\r\n                  />\r\n                  {index ? (\r\n                    <Button\r\n                      className=\"button remove ml-1\"\r\n                      color=\"primary\"\r\n                      onClick={() => removeFormFields(index)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  ) : null}\r\n                </div>\r\n              ))}\r\n              <div className=\"button-section\">\r\n                <Button\r\n                  onClick={() => addFormFields()}\r\n                  color=\"primary\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Add\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  className=\"mr-1 mt-2 mx-2 button submit\"\r\n                  // className=\"button submit\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> Product Seriel No. *</Label>\r\n                    {/* {AssignRole === \"supplier\" ? ( */}\r\n                    <>\r\n                      <Multiselect\r\n                        required\r\n                        showCheckbox=\"true\"\r\n                        isObject=\"false\"\r\n                        options={StateList} // Options to display in the dropdown\r\n                        // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                        onSelect={onSelect1} // Function will trigger on select event\r\n                        onRemove={onRemove1} // Function will trigger on remove event\r\n                        displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                      />\r\n                    </>\r\n                    {/* ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={e => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then(res => {\r\n                                setCityList(res?.data?.cities);\r\n                              })\r\n                              .catch(err => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )} */}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label> Select Role*</Label>\r\n                    <CustomInput\r\n                      required\r\n                      id=\"AssignRole\"\r\n                      type=\"select\"\r\n                      name=\"AssignRole\"\r\n                      value={AssignRole}\r\n                      // onChange={changeHandler}\r\n                      onChange={e => setAssignRole(e.target.value)}\r\n                    >\r\n                      <option value=\"\">--Select Role--</option>\r\n\r\n                      {productName &&\r\n                        productName?.map((value, index) => (\r\n                          <option key={index} value={value}>\r\n                            {value}\r\n                          </option>\r\n                        ))}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Name *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"fullname\"\r\n                      value={fullname}\r\n                      onChange={e => setfullname(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Display Code *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Your Name\"\r\n                      name=\"UserName\"\r\n                      value={UserName}\r\n                      onChange={e => setUserName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      maxLength={12}\r\n                      onKeyDown={e =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      size={10}\r\n                      min={0}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Mobile_no\"\r\n                      value={Mobile_no}\r\n                      onChange={e => setMobile_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email *</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"abcd@gmail.com...\"\r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={e => setemail(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Password</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Enter password\"\r\n                      name=\"password\"\r\n                      value={password}\r\n                      onChange={e => setpassword(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Name</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter CompanyName\"\r\n                      name=\"CompanyName\"\r\n                      value={CompanyName}\r\n                      onChange={e => setCompanyName(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Phone Number </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"number\"\r\n                      onKeyDown={e =>\r\n                        [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                        e.preventDefault()\r\n                      }\r\n                      min={0}\r\n                      maxLength={12}\r\n                      size={10}\r\n                      placeholder=\"0123456789\"\r\n                      name=\"Phone_no\"\r\n                      value={Phone_no}\r\n                      onChange={e => setPhone_no(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Company Type</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Companytype\"\r\n                      name=\"Companytype\"\r\n                      value={Companytype}\r\n                      onChange={e => setCompanytype(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>GSTIN</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter GSTIN No.\"\r\n                      name=\"GSTIN\"\r\n                      value={GSTIN}\r\n                      onChange={e => setGSTIN(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Row></Row>\r\n                    <Label for=\"cars\"> State *</Label>\r\n                    {AssignRole === \"supplier\" ? (\r\n                      <>\r\n                        <Multiselect\r\n                          required\r\n                          showCheckbox=\"true\"\r\n                          isObject=\"false\"\r\n                          options={StateList} // Options to display in the dropdown\r\n                          // selectedValues={selectedValue}   // Preselected value to persist in dropdown\r\n                          onSelect={onSelect1} // Function will trigger on select event\r\n                          onRemove={onRemove1} // Function will trigger on remove event\r\n                          displayValue=\"state_title\" // Property name to display in the dropdown options\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <select\r\n                          required\r\n                          name=\"SelectedState\"\r\n                          value={SelectedState}\r\n                          onChange={e => {\r\n                            const formdata = new FormData();\r\n                            setSelectedState(e.target.value);\r\n                            // this.setState({ SelectedState: e.target.value });\r\n                            formdata.append(\"state_id\", e.target.value);\r\n                            axiosConfig\r\n                              .post(`/getcity`, formdata)\r\n                              .then(res => {\r\n                                setCityList(res?.data?.cities);\r\n                                // this.setState({ CityList: res?.data?.cities });\r\n                              })\r\n                              .catch(err => {\r\n                                console.log(err);\r\n                              });\r\n                          }}\r\n                          // onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select State--</option>\r\n                          {StateList &&\r\n                            StateList?.map((ele, i) => (\r\n                              <option key={i} value={ele?.id}>\r\n                                {ele?.state_title}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </>\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label for=\"cars\">City * </Label>\r\n                  <Multiselect\r\n                    required\r\n                    options={CityList} // Options to display in the dropdown\r\n                    // selectedValues={selectedValue} // Preselected value to persist in dropdown\r\n                    onSelect={onSelect} // Function will trigger on select event\r\n                    onRemove={onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\" // Property name to display in the dropdown options\r\n                  />\r\n                </Col>\r\n\r\n                {AssignRole === \"supplier\" ? (\r\n                  <>\r\n                    <Col lg=\"6\" md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Place of Supply</Label>\r\n                        <Input\r\n                          required\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Place_of_Supply\"\r\n                          name=\"Place_of_Supply\"\r\n                          value={Place_of_Supply}\r\n                          onChange={e => setPlace_of_Supply(e.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </>\r\n                ) : null}\r\n              </Row>\r\n              <hr />\r\n              <Row>\r\n                <Col className=\"mt-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <h4 className=\"mt-5 pb-2\">Billing Address :</h4>\r\n\r\n                  <Col className=\"\" lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"B_Country\"\r\n                        value={B_Country}\r\n                        onChange={e => setB_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"B_State\"\r\n                        value={B_State}\r\n                        onChange={e => {\r\n                          console.log(e.target.value);\r\n                          setB_State(e.target.value);\r\n                          // this.setState({ B_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then(res => {\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <FormGroup>\r\n                        <Label for=\"cars\">Choose City</Label>\r\n                        <select\r\n                          placeholder=\"Enter City\"\r\n                          name=\"B_City\"\r\n                          value={B_City}\r\n                          onChange={e => setB_City(e.target.value)}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          {CityList &&\r\n                            CityList?.map((value, index) => (\r\n                              <option key={index} value={value?.id}>\r\n                                {value?.name}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </FormGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"B_Street\"\r\n                        value={B_Street}\r\n                        onChange={e => setB_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"number\"\r\n                        onKeyDown={e =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        placeholder=\"Enter PinCode\"\r\n                        name=\"B_PinCode\"\r\n                        value={B_PinCode}\r\n                        onChange={e => setB_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <hr />\r\n                  <Row>\r\n                    <Col className=\"ml-2\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Input\r\n                        name=\"check\"\r\n                        onChange={e => {\r\n                          handleMatchaddress(e, e.target.checked);\r\n                        }}\r\n                        style={{\r\n                          height: \"15px\",\r\n                          width: \"20px\",\r\n                        }}\r\n                        type=\"checkbox\"\r\n                      />\r\n                    </Col>\r\n                    <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"ml-3\">\r\n                      <h5> Same as Billing Address </h5>\r\n                    </Col>\r\n                  </Row>\r\n                  <h4 className=\"py-2\">Shipping Address :</h4>\r\n\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose Country</Label>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_Country\"\r\n                        disabled={checkbox ? true : false}\r\n                        value={S_Country}\r\n                        onChange={e => setS_Country(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select Country--</option>\r\n                        <option value=\"India\">India</option>\r\n                      </select>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label for=\"cars\">Choose State</Label>\r\n                      <select\r\n                        name=\"S_State\"\r\n                        value={S_State}\r\n                        onChange={e => {\r\n                          // console.log(e.target.value);\r\n                          setS_State(e.target.value);\r\n                          // this.setState({ S_State: e.target.value });\r\n                          const formdata = new FormData();\r\n                          formdata.append(\"state_id\", e.target.value);\r\n                          axiosConfig\r\n                            .post(`/getcity`, formdata)\r\n                            .then(res => {\r\n                              console.log(res?.data?.cities);\r\n                              setCityList(res?.data?.cities);\r\n                              // this.setState({ CityList: res?.data?.cities });\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                            });\r\n                        }}\r\n                        // onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        {StateList &&\r\n                          StateList?.map((ele, i) => (\r\n                            <option key={i} value={ele?.id}>\r\n                              {ele?.state_title}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <select\r\n                        name=\"S_State\"\r\n                        disabled={this.state.checkbox ? true : false}\r\n                        value={this.state.S_State}\r\n                        onChange={this.changeHandler}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select State--</option>\r\n                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                        <option value=\"Maharastra\">Maharastra</option>\r\n                      </select> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <Label for=\"cars\">Choose City</Label>\r\n\r\n                    <FormGroup>\r\n                      <select\r\n                        placeholder=\"Enter City\"\r\n                        name=\"S_City\"\r\n                        value={S_City}\r\n                        onChange={e => setS_City(e.target.value)}\r\n                        className=\"form-control\"\r\n                      >\r\n                        <option value=\"volvo\">--Select City--</option>\r\n                        {CityList &&\r\n                          CityList?.map((value, index) => (\r\n                            <option key={index} value={value?.id}>\r\n                              {value?.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                      {/* <FormGroup>\r\n                        <select\r\n                          disabled={this.state.checkbox ? true : false}\r\n                          placeholder=\"Enter City\"\r\n                          name=\"S_City\"\r\n                          value={this.state.S_City}\r\n                          onChange={this.changeHandler}\r\n                          className=\"form-control\"\r\n                        >\r\n                          <option value=\"volvo\">--Select City--</option>\r\n                          <option value=\"Indore\">Indore</option>\r\n                          <option value=\"Panvel\">Panvel</option>\r\n                          <option value=\"khandwa\">khandwa</option>\r\n                        </select>\r\n                      </FormGroup> */}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>Street</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Street\"\r\n                        name=\"S_Street\"\r\n                        value={S_Street}\r\n                        onChange={e => setS_Street(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                    <FormGroup>\r\n                      <Label>PinCode</Label>\r\n                      <Input\r\n                        required\r\n                        disabled={checkbox ? true : false}\r\n                        type=\"number\"\r\n                        placeholder=\"Enter PinCode\"\r\n                        onKeyDown={e =>\r\n                          [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                          e.preventDefault()\r\n                        }\r\n                        min={0}\r\n                        name=\"S_PinCode\"\r\n                        value={S_PinCode}\r\n                        onChange={e => setS_PinCode(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* {this.state.setuserList && ( */}\r\n              <Row className=\"mt-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div\r\n                    className=\"form-label-group\"\r\n                    onChange={e => setstatus(e.target.value)}\r\n                  >\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Active\"\r\n                    />\r\n                    <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                    <input\r\n                      style={{ marginRight: \"3px\" }}\r\n                      type=\"radio\"\r\n                      name=\"status\"\r\n                      value=\"Deactive\"\r\n                    />\r\n                    <span style={{ marginRight: \"3px\" }}>Deactive</span>\r\n                  </div>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <Label className=\"mt-2  mb-2\"> Select User</Label>\r\n\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"Selectuser\"\r\n                    value={this.state.Selectuser}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option value=\"user1\">user 1</option>\r\n                    <option value=\"user2\">user2</option>\r\n                    <option value=\"user2\">UPI</option>\r\n                    <option value=\"user2\">Other</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n              </Row>\r\n              {/* )} */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AddProduct;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}