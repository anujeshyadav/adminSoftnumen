{"version":3,"sources":["views/forms/form-elements/datepicker/Pickers.js","views/apps/freshlist/parts/Terrance.js","views/apps/freshlist/parts/Scheduler.js"],"names":["anuj","useState","text","className","type","onChange","event","setImage","URL","createObjectURL","target","files","terrance","importData","Scheduler","scheduler","setScheduler","Adhocfile","setAdhocfile","loading","setLoading","modal","setModal","toggle","Role","setRole","allPart","setAllPart","useEffect","console","log","handleInputChange","e","name","value","checked","Row","Col","Card","CardBody","Form","onSubmit","preventDefault","JSON","parse","localStorage","getItem","lg","md","sm","FormGroup","Label","Input","required","StartDate","Start_Time","style","marginRight","Pattern","width","placeholder","Every_Interval","Recurrence","marginTop","marginBottom","Occurance_frequency","marginLeft","End_by_date","Button","Ripple","color","InputGroup","disabled","onClick","fill","multiple","selectType","selectTypes","formdata","FormData","split","join","includes","adhodfile","append","SpareParts","then","res","swal","catch","err","Orders","PartCatelougue","ProdctsUpload","InspectionUpload","InvoiceUpload","SupporttUpload","ServicingUpload","WareHouseUpload","DistributorUpload","DealerUpload","SupplierUpload","ServiceCenterUpload","CustomerDataUpload","CampaignUpload","handleSubmit","Modal","fullscreen","size","backdrop","isOpen","ModalHeader","ModalBody","Table","bordered","hover","responsive","map","ele","i","key","cursor","scope","ModalFooter"],"mappings":"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","file":"static/js/269.d145823b.chunk.js","sourcesContent":["// import React from \"react\";\r\n// import { Row, Col } from \"reactstrap\";\r\n// import Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import Datepickers from \"./Datepickers\";\r\n// import Timepickers from \"./Timepicker\";\r\n\r\n// import \"flatpickr/dist/themes/light.css\";\r\n// import \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\";\r\n\r\n// class Pickers extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <React.Fragment>\r\n//         <Breadcrumbs\r\n//           breadCrumbTitle=\"Date & Time Picker\"\r\n//           breadCrumbParent=\"Form Elements\"\r\n//           breadCrumbActive=\"Date & Time Picker\"\r\n//         />\r\n//         <Row>\r\n//           <Col sm=\"12\">\r\n//             <Datepickers />\r\n//           </Col>\r\n//           <Col sm=\"12\">\r\n//             <Timepickers />\r\n//           </Col>\r\n//         </Row>\r\n//       </React.Fragment>\r\n//     );\r\n//   }\r\n// }\r\n// export default Pickers;\r\nimport { useState, useRef } from \"react\";\r\nimport Tesseract from \"tesseract.js\";\r\n\r\nfunction anuj() {\r\n  const [imagePath, setImagePath] = useState(\"\");\r\n  const [text, setText] = useState(\"aa\");\r\n\r\n  const handleChange = (event) => {\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main className=\"App-main\">\r\n        <h3>Actual image uploaded</h3>\r\n        {/* <img src={imagePath} className=\"App-logo\" alt=\"logo\" /> */}\r\n\r\n        <h3>Extracted text</h3>\r\n        <div className=\"text-box\">\r\n          <p> {text} </p>\r\n        </div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default anuj;\r\n","import { useState, useRef } from \"react\";\r\nimport preprocessImage from \"./preprocessImage \";\r\nimport Tesseract from \"tesseract.js\";\r\n\r\nfunction terrance() {\r\n  const [image, setImage] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n\r\n  const handleChange = (event) => {\r\n    setImage(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(imageRef.current, 0, 0);\r\n    ctx.putImageData(preprocessImage(canvas), 0, 0);\r\n    const dataUrl = canvas.toDataURL(\"image/jpeg\");\r\n\r\n    Tesseract.recognize(dataUrl, \"eng\", {\r\n      logger: (m) => console.log(m),\r\n    })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      })\r\n      .then((result) => {\r\n        // Get Confidence score\r\n        let confidence = result.confidence;\r\n        console.log(confidence);\r\n        // Get full output\r\n        let text = result.text;\r\n\r\n        setText(text);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <main className=\"App-main\">\r\n          <h3>Actual image uploaded</h3>\r\n          <img src={image} className=\"App-logo\" alt=\"logo\" ref={imageRef} />\r\n          <h3>Canvas</h3>\r\n          {/* <canvas ref={canvasRef} width={700} height={250}></canvas> */}\r\n          <h3>Extracted text</h3>\r\n          <div className=\"pin-box\">\r\n            <p> {text} </p>\r\n          </div>\r\n          <input type=\"file\" onChange={handleChange} />\r\n          <button onClick={() => handleClick} style={{ height: 50 }}>\r\n            Convert to text\r\n          </button>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default terrance;\r\n","// import React, { Component, useDebugValue } from \"react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Row,\r\n  FormGroup,\r\n  CustomInput,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  InputGroup,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Terrance from \"./Terrance\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport Select from \"react-select\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { timers } from \"jquery\";\r\nimport {\r\n  CampaignUpload,\r\n  CustomerDataUpload,\r\n  DealerUpload,\r\n  DistributorUpload,\r\n  InspectionUpload,\r\n  InvoiceUpload,\r\n  Orders,\r\n  PartCatelougue,\r\n  ProdctsUpload,\r\n  ServiceCenterUpload,\r\n  ServicingUpload,\r\n  SpareParts,\r\n  SupplierUpload,\r\n  SupporttUpload,\r\n  WareHouseUpload,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n// import { dummytest } from \"./test\";\r\nimport HtmlParser from \"react-html-parser\";\r\nimport Pickers from \"../../../forms/form-elements/datepicker/Pickers\";\r\n// const selectItem1 = [];\r\n\r\n// const Selectedarray = [];\r\n\r\nconst importData = [\r\n  \"Product Registration\",\r\n  \"SpareParts\",\r\n  \"Orders\",\r\n  \"PartsCatalogue\",\r\n  \"Scrutiny / Inspections\",\r\n  \"Invoices / Billing\",\r\n  \"Support\",\r\n  \"Servicing\",\r\n  \"Warehouse\",\r\n  \"Distributors\",\r\n  \"Dealers\",\r\n  \"Suppliers\",\r\n  \"Service Centers\",\r\n  \"Customer Data\",\r\n  \"Campaigns\",\r\n];\r\nconst Scheduler = () => {\r\n  const [scheduler, setScheduler] = useState({});\r\n  const [Adhocfile, setAdhocfile] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const [Role, setRole] = useState(\"\");\r\n  const [allPart, setAllPart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(dummytest);\r\n    // console.log(\"answer_steps--->\", JSON.parse(dummytest?.answer_steps));\r\n    // console.log(\"plan--->\", dummytest?.plan);\r\n    // console.log(\"question_text-->\", dummytest?.question_text);\r\n    setAllPart(importData);\r\n    // let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // let newparmisson = pageparmission?.role?.find(\r\n    //   (value) => value?.pageName === \"Create Account\"\r\n    // );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(scheduler);\r\n    console.log(Adhocfile);\r\n  }, [scheduler, Adhocfile]);\r\n  const handleInputChange = (e) => {\r\n    const { name, value, checked } = e.target;\r\n    setScheduler({\r\n      ...scheduler,\r\n      [name]: value,\r\n    });\r\n  };\r\n  const handleopentoggle = () => {\r\n    toggle();\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let pageparmission = JSON.parse(localStorage.getItem(\"userData\"));\r\n    // let uniqueChars = [...new Set(selectItem1)];\r\n    // let selectedOption = [...new Set(selectedOptions)];\r\n  };\r\n\r\n  const HandleSelectRole = (val) => {\r\n    setRole(val);\r\n    toggle();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    var selectType;\r\n    var selectTypes;\r\n    debugger;\r\n    console.log(Role.split(\" \").join(\"\"));\r\n    if (Role.split(\" \").join(\"\").includes(\"/\")) {\r\n      selectType = Role.split(\"/\").join(\"\").split(\" \")[0];\r\n      selectTypes = Role.split(\"/\").join(\"\").split(\" \")[1];\r\n    } else {\r\n      selectType = Role.split(\" \").join(\"\");\r\n    }\r\n    let adhodfile = Adhocfile[0].name.split(\".\")[0];\r\n    // console.log(adhodfile.includes(selectType));\r\n    if (adhodfile.includes(selectType) || adhodfile.includes(selectTypes)) {\r\n      formdata.append(\"file\", Adhocfile[0]);\r\n      formdata.append(\"partType\", selectType);\r\n\r\n      if (Role == \"SpareParts\") {\r\n        SpareParts(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Orders\") {\r\n        Orders(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"PartsCatalogue\") {\r\n        PartCatelougue(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Product Registration\") {\r\n        ProdctsUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Scrutiny / Inspections\") {\r\n        InspectionUpload(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setLoading(false);\r\n\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Invoices / Billing\") {\r\n        InvoiceUpload(formdata)\r\n          .then((res) => {\r\n            console.log(res);\r\n            setLoading(false);\r\n\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Support\") {\r\n        SupporttUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Servicing\") {\r\n        ServicingUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Warehouse\") {\r\n        WareHouseUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Distributors\") {\r\n        DistributorUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Dealers\") {\r\n        DealerUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Suppliers\") {\r\n        SupplierUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Service Centers\") {\r\n        ServiceCenterUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Customer Data\") {\r\n        CustomerDataUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n      if (Role == \"Campaigns\") {\r\n        CampaignUpload(formdata)\r\n          .then((res) => {\r\n            setLoading(false);\r\n\r\n            console.log(res);\r\n            swal(`${Role} File Uploaded Successfully`);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    } else {\r\n      swal(\r\n        \"Error!\",\r\n        `Note: ${selectType} Name and ${adhodfile} Name Prefix Should be Match`,\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Row>\r\n          <Col>{/* <Pickers /> */}</Col>\r\n        </Row>\r\n        <Card>\r\n          {/* <Row className=\"p-3\">\r\n            <Col>\r\n              {JSON.parse(dummytest?.answer_steps)?.map((ele) => {\r\n                console.log(ele);\r\n                return (\r\n                  <>\r\n                    <div>{ele?.sequence}</div>\r\n                    <div>{ele?.header}</div>\r\n                    <div>{HtmlParser(ele?.text)}</div>\r\n                  </>\r\n                );\r\n              })}\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: dummytest?.plan.replace(/\\n/g, \"<br/>\"),\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row> */}\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Scheduler Time</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Date</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"date\"\r\n                      name=\"StartDate\"\r\n                      value={scheduler?.StartDate}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label>Start Time </Label>\r\n                    <Input\r\n                      required\r\n                      type=\"time\"\r\n                      name=\"Start_Time\"\r\n                      value={scheduler?.Start_Time}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Recurrence Pattern</Label>\r\n                  <div className=\"form-label-group mt-2\">\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Yearly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Yearly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Monthly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Monthly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Weekly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Weekly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Daily\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Daily</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Hourly\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>Hourly</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Minuts\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Minuts</span>\r\n                    </div>\r\n                    <div>\r\n                      <input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Pattern\"\r\n                        value=\"Second\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"20px\" }}>Second</span>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  {scheduler?.Pattern && scheduler?.Pattern && (\r\n                    <>\r\n                      <Label className=\"mb-1\">\r\n                        If you want to Repeated Time\r\n                      </Label>\r\n\r\n                      <FormGroup className=\"d-flex\">\r\n                        <div className=\"mx-2\">\r\n                          <Input\r\n                            type=\"radio\"\r\n                            name=\"Repeat_time\"\r\n                            value=\"Every\"\r\n                            onChange={(e) => handleInputChange(e)}\r\n                          />\r\n                          <span style={{ marginRight: \"3px\" }}>Every</span>\r\n                        </div>\r\n                        <div>\r\n                          <Input\r\n                            className=\"every\"\r\n                            style={{ marginRight: \"3px\", width: \"80px\" }}\r\n                            type=\"text\"\r\n                            placeholder={scheduler?.Pattern}\r\n                            name=\"Every_Interval\"\r\n                            value={scheduler?.Every_Interval}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            // value=\"\"\r\n                          />\r\n                        </div>\r\n                      </FormGroup>\r\n                    </>\r\n                  )}\r\n                </Col>\r\n                <hr />\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label className=\"my-1\">Range Of Recurrence </Label>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"No_End_Date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>No End Date</span>\r\n                    </div>\r\n                    <div className=\"ml-2 \">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_After\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End After</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_After\" && (\r\n                      <div className=\"d-flex py-1\">\r\n                        <div\r\n                          className=\"OccurrencesStyle\"\r\n                          style={{ marginTop: \"-5px\" }}\r\n                        >\r\n                          <Input\r\n                            style={{\r\n                              marginRight: \"3px\",\r\n                              width: \"100px\",\r\n                              marginBottom: \"2px\",\r\n                            }}\r\n                            value={scheduler?.Occurance_frequency}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                            type=\"number\"\r\n                            name=\"Occurance_frequency\"\r\n                            placeholder=\"Occurrences Time\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <span style={{ marginLeft: \"10px\" }}>\r\n                            <b>Occurrences</b>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"ml-2\">\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"radio\"\r\n                        name=\"Recurrence\"\r\n                        value=\"End_by\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                      <span style={{ marginRight: \"3px\" }}>End by</span>\r\n                    </div>\r\n                    {scheduler?.Recurrence == \"End_by\" && (\r\n                      <Input\r\n                        value={scheduler?.End_by_date}\r\n                        type=\"date\"\r\n                        name=\"End_by_date\"\r\n                        onChange={(e) => handleInputChange(e)}\r\n                      />\r\n                    )}\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n\r\n            <hr />\r\n            <Row>{/* <Terrance /> */}</Row>\r\n            <Form>\r\n              <Row className=\"mt-2\">\r\n                <Col>\r\n                  <Label>Import Type</Label>\r\n                  <InputGroup className=\"maininput\">\r\n                    <Input\r\n                      disabled\r\n                      name=\"Role\"\r\n                      value={Role}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                      type=\"text\"\r\n                      placeholder=\"Import Search\"\r\n                      className=\"form-control inputs\"\r\n                    />\r\n                    <Button\r\n                      onClick={handleopentoggle}\r\n                      color=\"primary\"\r\n                      className=\"mybtn primary\"\r\n                    >\r\n                      <AiOutlineSearch\r\n                        onClick={(e) => e.preventDefault()}\r\n                        fill=\"white\"\r\n                      />\r\n                    </Button>\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Adhoc Upload</h4>\r\n                  </Label>\r\n\r\n                  <input\r\n                    multiple\r\n                    className=\"form-control\"\r\n                    style={{ marginRight: \"3px\" }}\r\n                    name=\"adhocfiles\"\r\n                    type=\"file\"\r\n                    onChange={(e) => setAdhocfile(e.target.files)}\r\n                  />\r\n                </Col>\r\n                <Col\r\n                  lg=\"6\"\r\n                  md=\"6\"\r\n                  sm=\"6\"\r\n                  className=\"mb-2 d-flex justify-content-center\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <>\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          // onClick={(e) => handleSubmit(e)}\r\n                          className=\"mr-1 mt-2 mx-2\"\r\n                        >\r\n                          Loading..\r\n                        </Button.Ripple>\r\n                      </>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                        className=\"mr-1 mt-2 mx-2\"\r\n                      >\r\n                        Upload\r\n                      </Button.Ripple>\r\n                    </>\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          fullscreen=\"xl\"\r\n          size=\"lg\"\r\n          backdrop={false}\r\n          isOpen={modal}\r\n          toggle={toggle}\r\n          // {...args}\r\n        >\r\n          <ModalHeader toggle={toggle}>Import Type List</ModalHeader>\r\n          <ModalBody className=\"table-body shedulemodalbody\">\r\n            <div className=\"modalheaderaddrol p-1\">\r\n              <h3 className=\"table-item\">Import Type</h3>\r\n\r\n              <Table\r\n                className=\"scheduletble_heading\"\r\n                bordered\r\n                hover\r\n                responsive\r\n                size=\"sm\"\r\n              >\r\n                <thead className=\"tableRowStyle\">\r\n                  <tr className=\"tableRowStyle\">\r\n                    <th>S.No.</th>\r\n                    <th>Import Type Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allPart.map((ele, i) => {\r\n                    return (\r\n                      <tr\r\n                        className=\"tableRowStyles\"\r\n                        key={i}\r\n                        name=\"Role\"\r\n                        onClick={(e) => HandleSelectRole(ele)}\r\n                        // onClick={(e) => {\r\n                        //   setScheduler({ ...scheduler, [\"Role\"]: ele });\r\n                        //   HandleSelectRole(ele);\r\n                        // }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        <th scope=\"row\" className=\"tableRowStyles\">\r\n                          {i + 1}\r\n                        </th>\r\n                        <td className=\"tableRowStyles\"> {ele}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={toggle}>\r\n              Submit\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Scheduler;\r\n"],"sourceRoot":""}