{"version":3,"sources":["../node_modules/reactstrap/es/FormGroup.js","views/apps/freshlist/accounts/ViewAccount.js"],"names":["_excluded","propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","CreateAccount","ViewOneData","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","handleInputChange","useParams","e","target","name","value","useEffect","console","log","CreateAccountView","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","catch","err","onSubmit","preventDefault","CreateAccountSave","status","window","location","reload","swal","lg","md","MyDropdown","dropdown","label","_text","readOnly","type","onChange","input","map","ele","i","key","sm","onKeyDown","_attributes","includes","placeholder","color","Status"],"mappings":"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","file":"static/js/336.b1c6a6ae.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountUpdate,\r\n  CreateAccountView,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\n\r\nconst CreateAccount = ({ ViewOneData }) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n\r\n  const Params = useParams();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  // console.log(formData);\r\n  useEffect(() => {\r\n    console.log(ViewOneData);\r\n    setFormData(ViewOneData);\r\n    // CreateAccountUpdate(Params.id)\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    CreateAccountView()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        // console.log(JSON.parse(jsonData));\r\n        setCreatAccountView(JSON.parse(jsonData));\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(formData);\r\n    CreateAccountSave(formData)\r\n      .then((res) => {\r\n        if (res.status) {\r\n          setFormData({});\r\n          window.location.reload();\r\n          swal(\"Acccont Created Successfully\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Account Information</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      readOnly\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.CreateAccount?.MyDropdown?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                            ?.name?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">\r\n                        {\" \"}\r\n                        {\r\n                          formData[\r\n                            dropdownValue.CreateAccount?.MyDropdown?.dropdown\r\n                              ?.name?._text\r\n                          ]\r\n                        }\r\n                      </option>\r\n                      {/* {dropdownValue?.CreateAccount?.MyDropdown?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )} */}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.CreateAccount?.input?.map((ele, i) => {\r\n                    return (\r\n                      <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                        <FormGroup>\r\n                          <Label>{ele?.label?._text}</Label>\r\n                          <Input\r\n                            readOnly\r\n                            onKeyDown={(e) => {\r\n                              if (ele?.type?._attributes?.type == \"number\") {\r\n                                [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                  e.preventDefault();\r\n                              }\r\n                            }}\r\n                            type={ele?.type?._attributes?.type}\r\n                            placeholder={ele?.placeholder?._text}\r\n                            name={ele?.name?._text}\r\n                            value={formData[ele?.name?._text]}\r\n                            onChange={handleInputChange}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n              </Row>\r\n              <hr />\r\n              <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>\r\n                      Status-\r\n                      <Badge\r\n                        color={\r\n                          formData.Status == \"Active\" ? \"primary\" : \"danger\"\r\n                        }\r\n                      >\r\n                        {formData.Status}\r\n                      </Badge>\r\n                    </h4>\r\n                  </Label>\r\n                  {/* <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.CreateAccount?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span style={{ marginRight: \"20px\" }}>\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div> */}\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Update\r\n                </Button.Ripple>\r\n              </Row> */}\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateAccount;\r\n"],"sourceRoot":""}