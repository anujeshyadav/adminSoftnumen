{"version":3,"sources":["assets/img/logo/paravilogo.png","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/Container.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroupAddon.js","assets/img/svg/google.svg","views/pages/authentication/login/LoginFirebase.js","views/pages/authentication/login/LoginJWT.js","../../../src/index.tsx","views/pages/authentication/login/Login.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/reactstrap/es/FormGroup.js","components/@vuexy/checkbox/CheckboxesVuexy.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["module","exports","_excluded","propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","fluid","oneOfType","bool","Container","containerClass","InputGroupText","addonType","oneOf","isRequired","children","node","InputGroupAddon","LoginFirebase","state","email","password","remember","handleLogin","e","preventDefault","submitLoginWithFireBase","handleRemember","setState","target","checked","Fragment","CardBody","Form","action","onSubmit","this","FormGroup","Input","type","placeholder","value","onChange","required","Label","color","icon","label","defaultChecked","to","Button","Ripple","onClick","loginWithFB","loginWithTwitter","stroke","loginWithGoogle","src","googleSvg","alt","height","width","loginWithGithub","Component","connect","values","auth","login","LoginJWT","loginWithJWT","isStyleObject","obj","_a","_b","_c","numInputs","onPaste","renderInput","_d","shouldAutoFocus","_e","inputType","renderSeparator","containerStyle","inputStyle","_f","skipDefaultStyles","useState","activeInput","setActiveInput","inputRefs","useRef","getOTPValue","toString","split","isInputNum","useEffect","current","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","changeCodeAtFocus","focusInput","handleInputChange","nativeEvent","data","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","pos","shift","style","Object","assign","display","alignItems","undefined","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","autoComplete","maxLength","textAlign","inputMode","onInput","i","Login","handlechange","name","loginOTPHandler","emailotp","Opt","username","UserOTPVerify","then","response","basicinfor","user","newinfor","user1","allinfor","status","context","setUserInformatio","localStorage","setItem","JSON","stringify","token","setTimeout","history","push","swal","buttons","ok","text","catch","err","log","loginHandler","UserLogin","res","parse","gmail","whatsapp","sms","UserCredential","title","OtpScreen","message","dangerMode","changepassword","formdata","FormData","append","axiosConfig","post","resetpassword","Otp","whatsappotp","smsotp","preventBackButton","window","pushState","location","href","popstateHandler","go","addEventListener","allowBackButton","removeEventListener","Row","Col","sm","xl","lg","md","Card","logo","CardHeader","CardTitle","TabContent","activeTab","TabPane","tabId","border","position","cursor","outline","contextType","UserContext","TabContext","createContext","row","check","inline","disabled","CheckBoxesVuexy","any","_Component","_this","call","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","keys","Provider","activeTabId","getClasses","active","Consumer","_ref"],"mappings":"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","file":"static/js/115.f08e28df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paravilogo.d9c2409f.png\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","module.exports = __webpack_public_path__ + \"static/media/google.73cbaa09.svg\";","import React from \"react\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check, Facebook, Twitter, GitHub } from \"react-feather\";\r\nimport { history } from \"../../../../history\";\r\nimport googleSvg from \"../../../../assets/img/svg/google.svg\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n} from \"../../../../redux/actions/auth/loginActions\";\r\n\r\nclass LoginFirebase extends React.Component {\r\n  state = {\r\n    email: \"demo@demo.com\",\r\n    password: \"demodemo\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.submitLoginWithFireBase(\r\n      this.state.email,\r\n      this.state.password,\r\n      this.state.remember\r\n    );\r\n  };\r\n\r\n  handleRemember = (e) => {\r\n    this.setState({\r\n      remember: e.target.checked,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n        <div className=\"auth-footer\">\r\n          <div className=\"divider\">\r\n            <div className=\"divider-text\">OR</div>\r\n          </div>\r\n          <div className=\"footer-btn\">\r\n            <Button.Ripple\r\n              className=\"btn-facebook\"\r\n              color=\"\"\r\n              onClick={() => {\r\n                this.props.loginWithFB();\r\n              }}\r\n            >\r\n              <Facebook size={14} />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-twitter\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithTwitter}\r\n            >\r\n              <Twitter size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-google\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGoogle}\r\n            >\r\n              <img src={googleSvg} alt=\"google\" height=\"15\" width=\"15\" />\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"btn-github\"\r\n              color=\"\"\r\n              onClick={this.props.loginWithGithub}\r\n            >\r\n              <GitHub size={14} stroke=\"white\" />\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitLoginWithFireBase,\r\n  loginWithFB,\r\n  loginWithTwitter,\r\n  loginWithGoogle,\r\n  loginWithGithub,\r\n})(LoginFirebase);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../../../../history\";\r\n\r\nclass LoginJWT extends React.Component {\r\n  state = {\r\n    email: \"admin@gmail.com\",\r\n    password: \"12345\",\r\n    remember: false,\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    this.props.loginWithJWT(this.state);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          <Form action=\"/\" onSubmit={this.handleLogin}>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Mail size={15} />\r\n              </div>\r\n              <Label>Email</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n                required\r\n              />\r\n              <div className=\"form-control-position\">\r\n                <Lock size={15} />\r\n              </div>\r\n              <Label>Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n              <Checkbox\r\n                color=\"primary\"\r\n                icon={<Check className=\"vx-icon\" size={16} />}\r\n                label=\"Remember me\"\r\n                defaultChecked={false}\r\n                onChange={this.handleRemember}\r\n              />\r\n              <div className=\"float-right\">\r\n                <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </FormGroup>\r\n            <div className=\"d-flex justify-content-between\">\r\n              {/* <Button.Ripple\r\n                color=\"primary\"\r\n                outline\r\n                onClick={() => {\r\n                  history.push(\"/pages/register\");\r\n                }}\r\n              >\r\n                Register\r\n              </Button.Ripple> */}\r\n              <Button.Ripple color=\"primary\" type=\"submit\">\r\n                Login\r\n              </Button.Ripple>\r\n            </div>\r\n          </Form>\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n\r\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n    | 'inputMode'\n    | 'onInput'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Callback to be called when pasting content into the component */\n  onPaste?: (event: React.ClipboardEvent<HTMLDivElement>) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n  /** Do not apply the default styles to the inputs, will be removed in future versions */\n  skipDefaultStyles?: boolean; // TODO: Remove in next major release\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  onPaste,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n  skipDefaultStyles = false,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { nativeEvent } = event;\n    if (!isInputValueValid(event.target.value)) {\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n      // Clear the input if it's not valid value because firefox allows\n      // pasting non-numeric characters in a number type input\n      event.target.value = '';\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n      onPaste={onPaste}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                !skipDefaultStyles ? ({ width: '1em', textAlign: 'center' } as const) : {},\n                isStyleObject(inputStyle) ? inputStyle : {}\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n              inputMode: isInputNum ? 'numeric' : 'text',\n              onInput: handleInputChange,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport type { OTPInputProps, InputProps, AllowedInputTypes };\nexport default OTPInput;\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  CardTitle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardHeader,\r\n  Card,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  TabContent,\r\n  TabPane,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport { FaBeer } from \"react-icons/fa\";\r\nimport logo from \"../../../../assets/img/logo/paravilogo.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport { history } from \"../../../../history\";\r\nimport LoginAuth0 from \"./LoginAuth0\";\r\nimport LoginFirebase from \"./LoginFirebase\";\r\nimport LoginJWT from \"./LoginJWT\";\r\nimport { connect } from \"react-redux\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { UserLogin, UserOTPVerify } from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { AiFillEye, AiFillEyeInvisible } from \"react-icons/ai\";\r\n\r\nclass Login extends React.Component {\r\n  static contextType = UserContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      Otp: \"\",\r\n      emailotp: \"\",\r\n      type: \"password\",\r\n      whatsappotp: \"\",\r\n      smsotp: \"\",\r\n      OtpScreen: false,\r\n      UserCredential: {},\r\n      password: \"\",\r\n      resetpassword: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.preventBackButton();\r\n  }\r\n  preventBackButton() {\r\n    window.history.pushState(null, null, window.location.href);\r\n    this.popstateHandler = function () {\r\n      window.history.go(1);\r\n    };\r\n    window.addEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  componentWillUnmount() {\r\n    this.allowBackButton();\r\n  }\r\n  allowBackButton() {\r\n    window.removeEventListener(\"popstate\", this.popstateHandler);\r\n  }\r\n  loginOTPHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.emailotp?.length == 6) {\r\n      let Opt = { otp: this.state.emailotp, username: this.state.email };\r\n\r\n      await UserOTPVerify(Opt)\r\n        .then((response) => {\r\n          let basicinfor = response?.user;\r\n          let newinfor = response?.user?.user1;\r\n          let allinfor = { ...basicinfor, ...newinfor };\r\n\r\n          if (response?.status) {\r\n            this.context?.setUserInformatio(allinfor);\r\n            localStorage.setItem(\"userData\", JSON.stringify(allinfor));\r\n            localStorage.setItem(\r\n              \"userToken\",\r\n              JSON.stringify(response?.user?.token)\r\n            );\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/dashboard\");\r\n            }, 1500);\r\n            swal(\r\n              \"Sucessfully login\",\r\n              \"You are LoggedIn!\",\r\n\r\n              {\r\n                buttons: {\r\n                  ok: { text: \"Ok\", value: \"ok\" },\r\n                },\r\n              }\r\n            ).then((value) => {\r\n              switch (value) {\r\n                case \"ok\":\r\n                  break;\r\n                default:\r\n              }\r\n            });\r\n          } else {\r\n            swal(\"Something Went Wrong\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response);\r\n          swal(\r\n            `Error`,\r\n            `${err.response?.data.error} Please Enter correct Details`\r\n          );\r\n        });\r\n    } else {\r\n      swal(\"Please Enter OTP\");\r\n      // swal({\r\n      //   title: \"Are you sure?\",\r\n      //   text: \"Are you sure that you want to leave this page?\",\r\n      //   icon: \"warning\",\r\n      //   dangerMode: true,\r\n      // }).then((willDelete) => {\r\n      //   if (willDelete) {\r\n      //     swal(\"Deleted!\", \"Your imaginary file has been deleted!\", \"success\");\r\n      //   }\r\n      // });\r\n    }\r\n  };\r\n\r\n  loginHandler = async (e) => {\r\n    e.preventDefault();\r\n    let data = { username: this.state.email, password: this.state.password };\r\n    // console.log(data);\r\n    await UserLogin(data)\r\n      .then((res) => {\r\n        console.log(res?.user);\r\n        if (\r\n          JSON.parse(res?.user?.gmail) ||\r\n          JSON.parse(res?.user?.whatsapp) ||\r\n          JSON.parse(res?.user?.sms)\r\n        ) {\r\n          this.setState({ UserCredential: res?.user });\r\n          if (res?.status) {\r\n            swal({\r\n              icon: \"success\",\r\n              title: \"OTP has been sent to Registered mail\",\r\n              text: `${res?.user.email}`,\r\n            });\r\n            // swal(\r\n            //   \"Success\",\r\n            //   `OTP has been sent`,\r\n            //   `to Registered mail:- ${res?.user.email}`\r\n            // );\r\n            this.setState({ OtpScreen: true });\r\n          } else {\r\n            swal(\"Something Went Wrong\");\r\n          }\r\n        } else {\r\n          let basicinfor = res?.user;\r\n          let newinfor = res?.user?.user1;\r\n          let allinfor = { ...basicinfor, ...newinfor };\r\n\r\n          this.context?.setUserInformatio(allinfor);\r\n\r\n          localStorage.setItem(\"userData\", JSON.stringify(allinfor));\r\n          localStorage.setItem(\"userToken\", JSON.stringify(res?.user?.token));\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response?.data.message);\r\n        // let Incorrectpassword =\r\n        //   err.response?.data.message == \"Incorrect password\";\r\n        // let IncorrectEmail = err.response?.data.message == \"Incorrect Email\";\r\n        if (err.response?.data.message == \"Incorrect password\") {\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Password`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else if (err.response?.data.message == \"Incorrect Email\") {\r\n          // swal(\"Error\", \"Please Enter Correct Password\");\r\n          swal({\r\n            title: \"Some Error Occurred\",\r\n            text: `Incorrect Email`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        } else {\r\n          swal({\r\n            title: \"Please Enter Correct Username\",\r\n            text: `Incorrect username`,\r\n            icon: \"warning\",\r\n            dangerMode: false,\r\n          });\r\n        }\r\n      });\r\n\r\n    // const fromdata = new FormData();\r\n    // fromdata.append(\"username\", this.state.email);\r\n    // fromdata.append(\"password\", this.state.password);\r\n    // axiosConfig\r\n    //   .post(\"/usersign\", fromdata)\r\n    //   .then((response) => {\r\n    //     let msg = response.data?.success;\r\n    //     if (msg) {\r\n    //       localStorage.setItem(\"userData\", JSON.stringify(response.data?.data));\r\n    //       setTimeout(() => {\r\n    //         this.props.history.push(\"/dashboard\");\r\n    //       }, 2000);\r\n    //       swal(\r\n    //         \"Sucessfully login\",\r\n    //         \"You are LoggedIn!\",\r\n    //         \"Success\",\r\n\r\n    //         {\r\n    //           buttons: {\r\n    //             ok: { text: \"Ok\", value: \"ok\" },\r\n    //           },\r\n    //         }\r\n    //       ).then((value) => {\r\n    //         switch (value) {\r\n    //           case \"ok\":\r\n    //             break;\r\n    //           default:\r\n    //         }\r\n    //       });\r\n    //     }\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     let msg = error.response?.data.success;\r\n    //     if (!msg) {\r\n    //       swal(\"Error\", \"Invalid Username or Password\");\r\n    //     }\r\n    //   });\r\n  };\r\n  changepassword = (e) => {\r\n    e.preventDefault();\r\n    let formdata = new FormData();\r\n    formdata.append(\"email\", this.state.email);\r\n    formdata.append(\"base_url\", \"this.state.password\");\r\n    axiosConfig\r\n      .post(\"/forgetPasswordEmailVerify\", formdata)\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({ resetpassword: false });\r\n        swal(\"Email has been sent to Your Mail id\", \"Please Check and verify\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  // handleChangeOTP = (otp) => {\r\n  //   // console.log(otp);\r\n  //   this.setState({ emailotp: otp });\r\n  // };\r\n\r\n  render() {\r\n    const { UserCredential } = this.state;\r\n    return (\r\n      <Container>\r\n        <Row className=\"m-0 justify-content-center\">\r\n          <Col\r\n            sm=\"5\"\r\n            xl=\"5\"\r\n            lg=\"5\"\r\n            md=\"5\"\r\n            className=\"d-flex justify-content-center\"\r\n          >\r\n            <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n              <Row className=\"m-0\">\r\n                <Col lg=\"12\" md=\"12\" className=\"p-1\">\r\n                  <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                    <div className=\"logo-box text-center p-2\">\r\n                      <img\r\n                        src={logo}\r\n                        alt=\"loginImg\"\r\n                        width=\"90%\"\r\n                        height=\"150px\"\r\n                      />\r\n                    </div>\r\n\r\n                    {this.state.resetpassword ? (\r\n                      <>\r\n                        <CardHeader className=\"pb-1\">\r\n                          <CardTitle>\r\n                            <h4 className=\"mb-0\">\r\n                              <strong>Email Verification</strong>\r\n                            </h4>\r\n                          </CardTitle>\r\n                        </CardHeader>\r\n                        <p className=\"px-2 auth-title mb-2\">\r\n                          Welcome , Please Enter details.\r\n                        </p>\r\n                        <Form onSubmit={this.changepassword}>\r\n                          <Label>Email</Label>\r\n                          <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                            <Input\r\n                              type=\"text\"\r\n                              name=\"email\"\r\n                              placeholder=\"Username\"\r\n                              value={this.state.email}\r\n                              onChange={this.handlechange}\r\n                              // required\r\n                            />\r\n                          </FormGroup>\r\n                          <div className=\"d-flex justify-content-center\">\r\n                            <Button.Ripple color=\"primary\" type=\"submit\">\r\n                              Submit\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </Form>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <>\r\n                          {this.state.OtpScreen && this.state.OtpScreen ? (\r\n                            <>\r\n                              <CardHeader className=\"\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title\">\r\n                                Welcome , Enter OTP to Login your Account.\r\n                              </p>\r\n                              <Form onSubmit={this.loginOTPHandler}>\r\n                                <FormGroup className=\"otpscreeen d-flex justify-content-center\"></FormGroup>\r\n                                <div className=\"py-1 d-flex justify-content-center\">\r\n                                  {JSON.parse(UserCredential?.gmail) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Email OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.emailotp}\r\n                                        name=\"emailotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ emailotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.whatsapp) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">\r\n                                        Whatsapp OTP\r\n                                      </p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.whatsappotp}\r\n                                        name=\"whatsappotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ whatsappotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                  {JSON.parse(UserCredential?.sms) && (\r\n                                    <>\r\n                                      <p className=\"px-2 auth-title\">SMS OTP</p>\r\n                                      <OtpInput\r\n                                        containerStyle=\"true inputdata\"\r\n                                        inputStyle=\"true inputdataone\"\r\n                                        className=\"otpinputtype\"\r\n                                        value={this.state.smsotp}\r\n                                        name=\"smsotp\"\r\n                                        onChange={(otp) =>\r\n                                          this.setState({ smsotp: otp })\r\n                                        }\r\n                                        numInputs={6}\r\n                                        renderSeparator={<span>-</span>}\r\n                                        renderInput={(props) => (\r\n                                          <input\r\n                                            className=\"inputs\"\r\n                                            {...props}\r\n                                          />\r\n                                        )}\r\n                                      />\r\n                                    </>\r\n                                  )}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                  {/* <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple> */}\r\n                                  <Button.Ripple\r\n                                    width=\"80%\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                  >\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              <CardHeader className=\"pb-1\">\r\n                                <CardTitle>\r\n                                  <h4 className=\"mb-0\">\r\n                                    <strong>Login</strong>\r\n                                  </h4>\r\n                                </CardTitle>\r\n                              </CardHeader>\r\n                              <p className=\"px-2 auth-title mb-2\">\r\n                                Welcome back, Please login to your account.\r\n                              </p>\r\n                              <Form onSubmit={this.loginHandler}>\r\n                                {/* <Label>UserName</Label> */}\r\n                                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      username\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      name=\"email\"\r\n                                      placeholder=\"User Name\"\r\n                                      value={this.state.email}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                  </InputGroup>\r\n                                </FormGroup>\r\n\r\n                                {/* <Label>Password</Label> */}\r\n                                <FormGroup className=\"passwordlogin form-label-group position-relative has-icon-left\">\r\n                                  <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <button\r\n                                      style={{ width: \"34px\", border: \"none\" }}\r\n                                      className=\"viewbuttonheading\"\r\n                                    >\r\n                                      <span\r\n                                        className=\"eyeviewpassword\"\r\n                                        style={{\r\n                                          position: \"absolute\",\r\n                                          cursor: \"pointer\",\r\n                                        }}\r\n                                      >\r\n                                        {this.state.type == \"text\" ? (\r\n                                          <>\r\n                                            {\" \"}\r\n                                            <AiFillEyeInvisible\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({\r\n                                                  type: \"password\",\r\n                                                });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              color=\"blue\"\r\n                                            />\r\n                                          </>\r\n                                        ) : (\r\n                                          <>\r\n                                            <AiFillEye\r\n                                              onClick={(e) => {\r\n                                                e.preventDefault();\r\n                                                this.setState({ type: \"text\" });\r\n                                              }}\r\n                                              size=\"25px\"\r\n                                              color=\"blue\"\r\n                                            />\r\n                                          </>\r\n                                        )}\r\n                                      </span>\r\n                                    </button>\r\n                                  </InputGroup>\r\n                                  {/* <InputGroup>\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                      Password\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                      type={this.state.type}\r\n                                      name=\"password\"\r\n                                      placeholder=\"Password\"\r\n                                      value={this.state.password}\r\n                                      onChange={this.handlechange}\r\n                                      required\r\n                                    />\r\n                                    <span\r\n                                      className=\"eyeviewpassword\"\r\n                                      style={{\r\n                                        position: \"absolute\",\r\n                                        cursor: \"pointer\",\r\n                                      }}\r\n                                    >\r\n                                      {this.state.type == \"text\" ? (\r\n                                        <>\r\n                                          {\" \"}\r\n                                          <AiFillEyeInvisible\r\n                                            onClick={() =>\r\n                                              this.setState({\r\n                                                type: \"password\",\r\n                                              })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <AiFillEye\r\n                                            onClick={() =>\r\n                                              this.setState({ type: \"text\" })\r\n                                            }\r\n                                            size=\"25px\"\r\n                                            color=\"blue\"\r\n                                          />\r\n                                        </>\r\n                                      )}\r\n                                    </span>\r\n                                  </InputGroup> */}\r\n                                </FormGroup>\r\n\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                  <Button.Ripple\r\n                                    color=\"primary\"\r\n                                    outline\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      this.setState({ resetpassword: true });\r\n                                    }}\r\n                                    // onClick={() => {\r\n                                    //   history.push(\"/pages/reset-password\");\r\n                                    // }}\r\n                                  >\r\n                                    Forget Password\r\n                                  </Button.Ripple>\r\n                                  <Button.Ripple color=\"primary\" type=\"submit\">\r\n                                    Login\r\n                                  </Button.Ripple>\r\n                                  <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                      <LoginJWT />\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                      <LoginFirebase />\r\n                                    </TabPane>\r\n                                  </TabContent>\r\n                                </div>\r\n                              </Form>\r\n                            </>\r\n                          )}\r\n                        </>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}