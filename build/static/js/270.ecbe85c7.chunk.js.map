{"version":3,"sources":["views/apps/freshlist/policy/CreatePolicy.js"],"names":["CreatePolicy","useState","CreatePolicyView","setCreatePolicyView","Countries","setCountry","States","setState","Cities","setCities","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","attachment","comment","notification","formValues","setFormValues","handleInputChange","useContext","UserContext","e","type","i","console","log","target","value","name","checked","test","length","useEffect","PolicyViewData","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","JSON","parse","Policy","MyDropdown","CheckBox","input","map","ele","_text","catch","err","handleChange","newFormValues","className","onSubmit","preventDefault","lg","md","DropdownRole","dropdown","label","required","onChange","option","key","_attributes","DropdownPolicy","DropdownPartner","DropdownProduct","DropdownModel","DropdownVariant","DropdownUnit","DropdownYear","phoneinput","sm","inputClass","country","onKeyDown","includes","countryCodeEditable","phone","style","color","library","options","Country","getAllCountries","getOptionLabel","getOptionValue","State","getStatesOfCountry","isoCode","City","getCitiesOfState","countryCode","placeholder","element","onClick","splice","removeFormFields","Radiobutton","marginRight","Ripple"],"mappings":"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","file":"static/js/270.ecbe85c7.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  CreateAccountSave,\r\n  CreateAccountView,\r\n  PolicyViewData,\r\n} from \"../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\n\r\nconst CreatePolicy = () => {\r\n  const [CreatePolicyView, setCreatePolicyView] = useState({});\r\n  const [Countries, setCountry] = useState({});\r\n  const [States, setState] = useState({});\r\n  const [Cities, setCities] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n  const [formValues, setFormValues] = useState([\r\n    {\r\n      attachment: null,\r\n      comment: \"\",\r\n      notification: \"\",\r\n    },\r\n  ]);\r\n  const createUserXmlView = useContext(UserContext);\r\n\r\n  const handleInputChange = (e, type, i) => {\r\n    console.log(e.target.value);\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {}, [formData]);\r\n  useEffect(() => {\r\n    PolicyViewData()\r\n      .then(res => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData).Policy);\r\n        setCreatePolicyView(JSON.parse(jsonData));\r\n        let value = JSON.parse(jsonData)?.MyDropdown?.CheckBox?.input;\r\n        value?.map(ele => {\r\n          formData[ele?.name._text] = false;\r\n        });\r\n\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  let handleChange = (i, e) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let addFormFields = () => {\r\n    setFormValues([\r\n      ...formValues,\r\n      { comment: \"\", attachment: null, notification: \"\" },\r\n    ]);\r\n  };\r\n\r\n  let removeFormFields = i => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    // if (error) {\r\n    //   swal(\"Error occured while Entering Details\");\r\n    // } else {\r\n    //   CreateAccountSave(formData)\r\n    //     .then(res => {\r\n    //       setFormData({});\r\n    //       if (res.status) {\r\n    //         window.location.reload();\r\n    //         swal(\"Acccont Created Successfully\");\r\n    //       }\r\n    //     })\r\n    //     .catch(err => {\r\n    //       console.log(err);\r\n    //     });\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 className=\"float-left\">Create Policy</h1>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownRole?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownRole?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownRole?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Role---</option>\r\n                      {dropdownValue?.Policy?.DropdownRole?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownPolicy?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownPolicy?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownPolicy?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Warranty---</option>\r\n                      {dropdownValue?.Policy?.DropdownPolicy?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownPartner?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownPartner?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownPartner?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Partner Code---</option>\r\n                      {dropdownValue?.Policy?.DropdownPartner?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownProduct?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownProduct?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownProduct?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Product ---</option>\r\n                      {dropdownValue?.Policy?.DropdownProduct?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownModel?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownModel?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownModel?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Model ---</option>\r\n                      {dropdownValue?.Policy?.DropdownModel?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownVariant?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownVariant?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownVariant?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Variant ---</option>\r\n                      {dropdownValue?.Policy?.DropdownVariant?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownUnit?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownUnit?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownUnit?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Unit ---</option>\r\n                      {dropdownValue?.Policy?.DropdownUnit?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      {\r\n                        dropdownValue.Policy?.DropdownYear?.dropdown?.label\r\n                          ?._text\r\n                      }\r\n                    </Label>\r\n                    <CustomInput\r\n                      required\r\n                      type=\"select\"\r\n                      name={\r\n                        dropdownValue.Policy?.DropdownYear?.dropdown?.name\r\n                          ?._text\r\n                      }\r\n                      value={\r\n                        formData[\r\n                          dropdownValue.Policy?.DropdownYear?.dropdown?.name\r\n                            ?._text\r\n                        ]\r\n                      }\r\n                      onChange={handleInputChange}\r\n                    >\r\n                      <option value=\"\">--Select Year ---</option>\r\n                      {dropdownValue?.Policy?.DropdownYear?.dropdown?.option.map(\r\n                        (option, index) => (\r\n                          <option\r\n                            key={index}\r\n                            value={option?._attributes?.value}\r\n                          >\r\n                            {option?._attributes?.value}\r\n                          </option>\r\n                        )\r\n                      )}\r\n                    </CustomInput>\r\n                  </FormGroup>\r\n                </Col>\r\n                {CreatePolicyView &&\r\n                  CreatePolicyView?.Policy?.input?.map((ele, i) => {\r\n                    if (!!ele?.phoneinput) {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <PhoneInput\r\n                                inputClass=\"myphoneinput\"\r\n                                country={\"us\"}\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                countryCodeEditable={false}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={phone => {\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [ele?.name?._text]: phone,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    } else if (!!ele?.library) {\r\n                      if (ele?.label._text?.includes(\"ountry\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                inputClass=\"countryclass\"\r\n                                className=\"countryclassnw\"\r\n                                options={Country.getAllCountries()}\r\n                                getOptionLabel={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Countries}\r\n                                onChange={country => {\r\n                                  setCountry(country);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"Country\"]: country?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"tate\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={State?.getStatesOfCountry(\r\n                                  Countries?.isoCode\r\n                                )}\r\n                                getOptionLabel={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={States}\r\n                                onChange={State => {\r\n                                  setState(State);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"State\"]: State?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else if (ele?.label._text?.includes(\"ity\")) {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.label?._text}</Label>\r\n                              <Select\r\n                                options={City?.getCitiesOfState(\r\n                                  States?.countryCode,\r\n                                  States?.isoCode\r\n                                )}\r\n                                getOptionLabel={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                getOptionValue={options => {\r\n                                  return options[\"name\"];\r\n                                }}\r\n                                value={Cities}\r\n                                onChange={City => {\r\n                                  setCities(City);\r\n                                  setFormData({\r\n                                    ...formData,\r\n                                    [\"City\"]: City?.name,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup key={i}>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        );\r\n                      }\r\n                    } else {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup key={i}>\r\n                              <Label>{ele?.label?._text}</Label>\r\n\r\n                              <Input\r\n                                onKeyDown={e => {\r\n                                  if (\r\n                                    ele?.type?._attributes?.type == \"number\"\r\n                                  ) {\r\n                                    [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                      e.preventDefault();\r\n                                  }\r\n                                }}\r\n                                type={ele?.type?._attributes?.type}\r\n                                placeholder={ele?.placeholder?._text}\r\n                                name={ele?.name?._text}\r\n                                value={formData[ele?.name?._text]}\r\n                                onChange={e =>\r\n                                  handleInputChange(\r\n                                    e,\r\n                                    ele?.type?._attributes?.type,\r\n                                    i\r\n                                  )\r\n                                }\r\n                              />\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  })}\r\n\r\n                {/* <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatePolicyView &&\r\n                      CreatePolicyView?.CreateAccount?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={e =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </div> */}\r\n              </Row>\r\n\r\n              {formValues.map((element, index) => (\r\n                <Row key={index} className=\"my-2\">\r\n                  {/* <Col lg=\"4\">\r\n                      <Label>Notification</Label>\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"checkbox\"\r\n                        name=\"notification\"\r\n                        onChange={e => handleInputChange(e, \"checkbox\")}\r\n                      />\r\n                      <span\r\n                        className=\"mt-1 mx-1\"\r\n                        style={{ marginRight: \"40px\" }}\r\n                      >\r\n                        <BsWhatsapp\r\n                          className=\"mx-1\"\r\n                          color=\"#59CE72\"\r\n                          size={25}\r\n                        />\r\n                      </span>\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"checkbox\"\r\n                        name=\"notification\"\r\n                        onChange={e => handleInputChange(e, \"checkbox\")}\r\n                      />\r\n                      <span\r\n                        className=\"mt-1 mx-1\"\r\n                        style={{ marginRight: \"40px\" }}\r\n                      >\r\n                        <FcPhoneAndroid size={30} />\r\n                      </span>\r\n                      <Input\r\n                        style={{ marginRight: \"3px\" }}\r\n                        type=\"checkbox\"\r\n                        name=\"notification\"\r\n                        onChange={e => handleInputChange(e, \"checkbox\")}\r\n                      />\r\n                      <span\r\n                        className=\"mt-1 mx-1\"\r\n                        style={{ marginRight: \"40px\" }}\r\n                      >\r\n                        <BiEnvelope className=\"\" size={30} />\r\n                      </span> */}\r\n                  {/* <Input\r\n                        type=\"text\"\r\n                        name=\"notification\"\r\n                        value={element.notification || \"\"}\r\n                        placeholder=\"notify\"\r\n                        onChange={e => handleChange(index, e)}\r\n                      /> */}\r\n                  {/* </Col> */}\r\n                  <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                    <Label>Comment</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"comment\"\r\n                      placeholder=\"Comment\"\r\n                      value={element.comment || \"\"}\r\n                      onChange={e => handleChange(index, e)}\r\n                    />\r\n                  </Col>\r\n                  <Col lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <Label>Attachment</Label>\r\n                    <Input\r\n                      type=\"file\"\r\n                      name=\"attachment\"\r\n                      onChange={e => handleChange(index, e)}\r\n                    />\r\n                  </Col>\r\n                  <Col className=\"d-flex\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                    <div>\r\n                      {index ? (\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn btn-danger\"\r\n                          onClick={() => removeFormFields(index)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div>\r\n                      <Button\r\n                        className=\"ml-1\"\r\n                        type=\"button\"\r\n                        onClick={() => addFormFields()}\r\n                      >\r\n                        Add More\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n\r\n              <hr />\r\n              <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatePolicyView &&\r\n                      CreatePolicyView?.Policy?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CreatePolicy;\r\n"],"sourceRoot":""}