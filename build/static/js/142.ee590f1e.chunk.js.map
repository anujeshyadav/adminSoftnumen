{"version":3,"sources":["../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/Collapse.js","../node_modules/reactstrap/es/UncontrolledCollapse.js","components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["_excluded","propTypes","tabs","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","tagPropType","className","cssModule","object","Nav","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","React","createElement","_extends","defaultProps","_transitionStatusToCl","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","isOpen","children","arrayOf","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","Collapse","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","_this","call","this","state","height","name","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","render","_this2","_this$props","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","omit","in","status","collapseClass","getTransitionClass","style","ref","Component","omitKeys","defaultOpen","toggler","isRequired","toggleEvents","defaultToggleEvents","UncontrolledCollapse","togglers","removeEventListeners","toggle","componentDidMount","findDOMElements","addMultipleEventListeners","componentWillUnmount","e","_ref","preventDefault","accordion","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","content","CollapseDefault","activeTab","toggleTab","tab","toggleCollapse","collapseID","index","indexOf","items","splice","includes","renderCollapse","map","collapseItem","Card","onClick","classnames","closing","opening","CardHeader","CardTitle","size","CardBody","Fragment","NavItem","NavLink","active","TabContent","TabPane","tabId","CollapseUncontrolled","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","Prism","highlightAll","BreadCrumb","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","TabContext","createContext","t","n","util","clone","languages","javascript","a","replace","RegExp","jsx","extend","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","join","g","o","type","tagName","pop","openedBraces","r","Token","hooks","add","language","tokens","any","getDerivedStateFromProps","nextProps","Provider","value","activeTabId","getClasses","Consumer"],"mappings":"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","file":"static/js/142.ee590f1e.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;","import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordion } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Accordion\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}