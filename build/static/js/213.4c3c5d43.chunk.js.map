{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","views/apps/freshlist/customer/Ticketing/CreateTicket.js","../node_modules/reactstrap/es/Input.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["_excluded","propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","CreateTicket","args","useState","CreatAccountView","setCreatAccountView","formData","setFormData","dropdownValue","setdropdownValue","index","setindex","error","setError","modal","setModal","toggle","modalone","setModalone","useContext","UserContext","name","JSON","parse","localStorage","getItem","UserName","userRole","Role","comment","time","Date","Comments","setComments","files","formValues","setFormValues","newComment","userName","toString","handleopentoggle","handleopentoggleone","handleInputChange","e","type","i","target","value","checked","test","length","useEffect","TicketTool_ViewData","then","res","jsonData","xmlJs","xml2json","data","compact","spaces","console","log","createTicket","catch","err","onSubmit","preventDefault","swal","CreateAccountSave","status","window","location","reload","MyDropDown","map","drop","lg","md","key","dropdown","label","_text","required","onChange","option","_attributes","Product","ele","sm","style","color","input","lookup","placeholder","readOnly","onClick","fill","Readonly","heading","disabled","onKeyDown","includes","Parts","CheckBox","marginRight","multiple","newFormValues","selectedFiles","handleFileChange","splice","removeFileAttach","Ripple","element","handleComment","removeFormFields","alert","fullscreen","backdrop","isOpen","bordered","borderless","hover","responsive","striped","children","node","oneOfType","number","bsSize","valid","bool","invalid","innerRef","func","plaintext","addon","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","warnOnce","Component","row","check","inline","FormGroup"],"mappings":"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","file":"static/js/213.4c3c5d43.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"size\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport xmlJs from \"xml-js\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Table,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../../history\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Country, State, City } from \"country-state-city\";\r\nimport Select from \"react-select\";\r\nimport { Route } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../../src/layouts/assets/scss/pages/users.scss\";\r\n\r\nimport {\r\n  Warranty_ViewData,\r\n  CreateTicketViewData,\r\n  TicketTool_ViewData,\r\n} from \"../../../../../ApiEndPoint/ApiCalling\";\r\nimport { BiEnvelope } from \"react-icons/bi\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\nimport { BsWhatsapp } from \"react-icons/bs\";\r\nimport \"../../../../../assets/scss/pages/users.scss\";\r\nimport UserContext from \"../../../../../context/Context\";\r\nimport { CloudLightning } from \"react-feather\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nconst CreateTicket = (args) => {\r\n  const [CreatAccountView, setCreatAccountView] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n  const [dropdownValue, setdropdownValue] = useState({});\r\n  const [index, setindex] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [permissions, setpermissions] = useState({});\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [modalone, setModalone] = useState(false);\r\n  const toggleone = () => setModalone(!modalone);\r\n  const createUserXmlView = useContext(UserContext);\r\n  const [Comments, setComments] = useState([\r\n    {\r\n      name: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n      userRole: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n      comment: \"\",\r\n      time: new Date(),\r\n    },\r\n  ]);\r\n  const [formValues, setFormValues] = useState([{ files: [] }]);\r\n\r\n  const newComment = {\r\n    userName: JSON.parse(localStorage.getItem(\"userData\")).UserName,\r\n    Role: JSON.parse(localStorage.getItem(\"userData\")).Role,\r\n    comment: \"\",\r\n    time: new Date().toString(),\r\n  };\r\n  const handleopentoggle = () => {\r\n    toggle();\r\n  };\r\n  const handleopentoggleone = () => {\r\n    toggleone();\r\n  };\r\n\r\n  let handleComment = (i, e) => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    setComments(newFormValues);\r\n  };\r\n  const SubmitComment = () => {\r\n    alert(\"Comment Submit\");\r\n  };\r\n  let addFormFields = () => {\r\n    setComments([...Comments, newComment]);\r\n  };\r\n\r\n  let addFileInput = () => {\r\n    setFormValues([...formValues, { files: [] }]);\r\n  };\r\n\r\n  let removeFileAttach = (i) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues);\r\n  };\r\n\r\n  let handleFileChange = (i, e) => {\r\n    const newFormValues = [...formValues];\r\n    const selectedFiles = e.target.files;\r\n    newFormValues[i].files = selectedFiles;\r\n    setFormValues(newFormValues);\r\n  };\r\n  let removeFormFields = (i) => {\r\n    let newFormValues = [...Comments];\r\n    newFormValues.splice(i, 1);\r\n    setComments(newFormValues);\r\n  };\r\n  const handleInputChange = (e, type, i) => {\r\n    const { name, value, checked } = e.target;\r\n    setindex(i);\r\n    if (type == \"checkbox\") {\r\n      if (checked) {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      } else {\r\n        setFormData({\r\n          ...formData,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    } else {\r\n      if (type == \"number\") {\r\n        if (/^\\d{0,10}$/.test(value)) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          setError(\"\");\r\n        } else {\r\n          setError(\r\n            \"Please enter a valid number with a maximum length of 10 digits\"\r\n          );\r\n        }\r\n      } else {\r\n        if (value.length <= 10) {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // console.log(value);\r\n          setError(\"\");\r\n        } else {\r\n          setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n          });\r\n          // setError(\"Input length exceeds the maximum of 10 characters\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(formData);\r\n  }, [formData]);\r\n  useEffect(() => {\r\n    TicketTool_ViewData()\r\n      .then((res) => {\r\n        const jsonData = xmlJs.xml2json(res.data, { compact: true, spaces: 2 });\r\n        console.log(JSON.parse(jsonData)?.createTicket);\r\n        // let origionalpermission =\r\n        //   JSON.parse(jsonData)?.Warranty?.input[14].permissions?.role;\r\n        setCreatAccountView(JSON.parse(jsonData));\r\n        setdropdownValue(JSON.parse(jsonData));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (error) {\r\n      swal(\"Error occured while Entering Details\");\r\n    } else {\r\n      CreateAccountSave(formData)\r\n        .then((res) => {\r\n          if (res.status) {\r\n            setFormData({});\r\n            window.location.reload();\r\n            swal(\"Acccont Created Successfully\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col className=\"\">\r\n              <div>\r\n                <h1 className=\"\">Create Ticket </h1>\r\n              </div>\r\n              <div>\r\n                <span>Ticket Id</span> <span>#</span>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                {dropdownValue?.createTicket?.MyDropDown?.map((drop, i) => {\r\n                  return (\r\n                    <Col lg=\"6\" md=\"6\" key={i}>\r\n                      <FormGroup>\r\n                        <Label>{drop?.dropdown?.label?._text}</Label>\r\n                        <CustomInput\r\n                          required\r\n                          type=\"select\"\r\n                          name={drop?.dropdown?.name?._text}\r\n                          value={\r\n                            formData[drop?.dropdown?.dropdown?.name?._text]\r\n                          }\r\n                          onChange={handleInputChange}\r\n                        >\r\n                          <option value=\"\">\r\n                            --Select {drop?.dropdown.name._text}---\r\n                          </option>\r\n                          {drop.dropdown.option.map((option, index) => {\r\n                            return (\r\n                              <option\r\n                                key={index}\r\n                                value={option?._attributes?.value}\r\n                              >\r\n                                {option?._attributes?.value}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </CustomInput>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  );\r\n                })}\r\n\r\n                {/* dropdown product */}\r\n                <hr />\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Product?.MyDropDown?.map(\r\n                    (ele, i) => {\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.dropdown?.label?._text}</Label>\r\n\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name={ele?.dropdown?.name?._text}\r\n                                value={formData[ele?.dropdown?.name?._text]}\r\n                              >\r\n                                <option value=\"\">--Select---</option>\r\n                                {ele?.dropdown?.option?.map((option, index) => {\r\n                                  return (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={option?._attributes?.value}\r\n                                    >\r\n                                      {option?._attributes?.value}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </CustomInput>\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {/* product inputs  */}\r\n                <Row>\r\n                  <Col>\r\n                    <hr />\r\n                  </Col>\r\n                </Row>\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Product?.input?.map(\r\n                    (ele, i) => {\r\n                      if (!!ele?.lookup) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <InputGroup className=\"maininput\">\r\n                                    <Input\r\n                                      className=\"form-control inputs\"\r\n                                      type=\"text\"\r\n                                      name={ele?.name?._text}\r\n                                      placeholder={ele?.name._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      readOnly\r\n                                    />{\" \"}\r\n                                    <Button\r\n                                      onClick={handleopentoggle}\r\n                                      color=\"primary\"\r\n                                      className=\"mybtn primary\"\r\n                                    >\r\n                                      <AiOutlineSearch\r\n                                        onClick={(e) => e.preventDefault()}\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </Button>\r\n                                  </InputGroup>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else if (!!ele?.Readonly) {\r\n                        if (ele?.type._attributes?.type == \"checkbox\") {\r\n                          return (\r\n                            <>\r\n                              <Label className=\"mx-1\">\r\n                                {ele?.heading?._text}\r\n                              </Label>\r\n                              <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"mx-1\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-3 py-1\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"form-control\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-2\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n\r\n                {/* dropdown part */}\r\n                <Row>\r\n                  <Col>\r\n                    <hr />\r\n                  </Col>\r\n                </Row>\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Parts?.MyDropDown?.map(\r\n                    (ele, i) => {\r\n                      console.log(ele);\r\n                      return (\r\n                        <>\r\n                          <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                            <FormGroup>\r\n                              <Label>{ele?.dropdown?.label?._text}</Label>\r\n\r\n                              <CustomInput\r\n                                required\r\n                                type=\"select\"\r\n                                name={ele?.dropdown?.name?._text}\r\n                                value={formData[ele?.dropdown?.name?._text]}\r\n                              >\r\n                                <option value=\"\">--Select---</option>\r\n                                {ele?.dropdown?.option?.map((option, index) => {\r\n                                  return (\r\n                                    <option\r\n                                      key={index}\r\n                                      value={option?._attributes?.value}\r\n                                    >\r\n                                      {option?._attributes?.value}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </CustomInput>\r\n                              {index === i ? (\r\n                                <>\r\n                                  {error && (\r\n                                    <span style={{ color: \"red\" }}>\r\n                                      {error}\r\n                                    </span>\r\n                                  )}\r\n                                </>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </FormGroup>\r\n                          </Col>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n\r\n                {/* part inputs  */}\r\n                <hr />\r\n                <hr />\r\n                {CreatAccountView &&\r\n                  CreatAccountView?.createTicket?.Parts?.input?.map(\r\n                    (ele, i) => {\r\n                      if (!!ele?.lookup) {\r\n                        return (\r\n                          <>\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Label>{ele?.label?._text}</Label>\r\n                                  <InputGroup className=\"maininput\">\r\n                                    <Input\r\n                                      className=\"form-control inputs\"\r\n                                      type=\"text\"\r\n                                      name={ele?.name?._text}\r\n                                      placeholder={ele?.name._text}\r\n                                      value={formData[ele?.name?._text]}\r\n                                      readOnly\r\n                                    />{\" \"}\r\n                                    <Button\r\n                                      onClick={handleopentoggleone}\r\n                                      color=\"primary\"\r\n                                      className=\"mybtn primary\"\r\n                                    >\r\n                                      <AiOutlineSearch\r\n                                        onClick={(e) => e.preventDefault()}\r\n                                        fill=\"white\"\r\n                                      />\r\n                                    </Button>\r\n                                  </InputGroup>\r\n\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          </>\r\n                        );\r\n                      } else if (!!ele?.Readonly) {\r\n                        if (ele?.type?._attributes?.type == \"checkbox\") {\r\n                          return (\r\n                            <>\r\n                              <Label className=\"mx-1\">\r\n                                {ele?.heading?._text}\r\n                              </Label>\r\n                              <Col key={i} lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"mx-1\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-3 pt-1\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <>\r\n                              <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                                <Label>{ele?.label?._text}</Label>\r\n                                <FormGroup>\r\n                                  <Input\r\n                                    disabled\r\n                                    className=\"form-control\"\r\n                                    type={ele?.type._attributes?.type}\r\n                                    name={ele?.name?._text}\r\n                                    placeholder={ele?.name._text}\r\n                                    value={formData[ele?.value?._text]}\r\n                                  />\r\n                                  <span className=\"mx-2\">\r\n                                    {ele?.value?._text}\r\n                                  </span>\r\n                                  {index === i ? (\r\n                                    <>\r\n                                      {error && (\r\n                                        <span style={{ color: \"red\" }}>\r\n                                          {error}\r\n                                        </span>\r\n                                      )}\r\n                                    </>\r\n                                  ) : (\r\n                                    <></>\r\n                                  )}\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </>\r\n                          );\r\n                        }\r\n                      } else {\r\n                        return (\r\n                          <>\r\n                            <Col key={i} lg=\"6\" md=\"6\" sm=\"12\">\r\n                              <FormGroup>\r\n                                <Label>{ele?.label?._text}</Label>\r\n\r\n                                <Input\r\n                                  onKeyDown={(e) => {\r\n                                    if (\r\n                                      ele?.type?._attributes?.type == \"number\"\r\n                                    ) {\r\n                                      [\"e\", \"E\", \"+\", \"-\"].includes(e.key) &&\r\n                                        e.preventDefault();\r\n                                    }\r\n                                  }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  placeholder={ele?.placeholder?._text}\r\n                                  name={ele?.name?._text}\r\n                                  value={formData[ele?.name?._text]}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(\r\n                                      e,\r\n                                      ele?.type?._attributes?.type,\r\n                                      i\r\n                                    )\r\n                                  }\r\n                                />\r\n                                {index === i ? (\r\n                                  <>\r\n                                    {error && (\r\n                                      <span style={{ color: \"red\" }}>\r\n                                        {error}\r\n                                      </span>\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </>\r\n                        );\r\n                      }\r\n                    }\r\n                  )}\r\n\r\n                <div className=\"container\">\r\n                  <Label className=\"py-1\">Notification</Label>\r\n                  <div>\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.createTicket?.CheckBox?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <>\r\n                              <span key={i} className=\"mx-2\">\r\n                                <Input\r\n                                  style={{ marginRight: \"3px\" }}\r\n                                  type={ele?.type?._attributes?.type}\r\n                                  name={ele?.name?._text}\r\n                                  onChange={(e) =>\r\n                                    handleInputChange(e, \"checkbox\")\r\n                                  }\r\n                                />{\" \"}\r\n                                <span\r\n                                  className=\"mt-1 mx-1\"\r\n                                  style={{ marginRight: \"40px\" }}\r\n                                >\r\n                                  {ele?.label?._text == \"Whatsapp\" ? (\r\n                                    <BsWhatsapp\r\n                                      className=\"mx-1\"\r\n                                      color=\"#59CE72\"\r\n                                      size={25}\r\n                                    />\r\n                                  ) : (\r\n                                    <>\r\n                                      {ele.label?._text == \"SMS\" ? (\r\n                                        <>\r\n                                          <FcPhoneAndroid size={30} />\r\n                                        </>\r\n                                      ) : (\r\n                                        <>\r\n                                          <BiEnvelope className=\"\" size={30} />\r\n                                        </>\r\n                                      )}\r\n                                    </>\r\n                                  )}\r\n                                </span>\r\n                              </span>\r\n                            </>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </div>\r\n              </Row>\r\n              {formValues.map((index, i) => (\r\n                <>\r\n                  <label className=\"mt-1\">Upload files</label>\r\n                  <Row className=\"\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"12\" key={i}>\r\n                      <Input\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={(e) => handleFileChange(i, e)}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"d-flex mt-2\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div>\r\n                        {i ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removeFileAttach(i)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n                      <div>\r\n                        <Button\r\n                          className=\"ml-1\"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addFileInput()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ))}\r\n\r\n              <hr />\r\n              {/* <Row className=\"mt-2 \">\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label className=\"\">\r\n                    <h4>Status</h4>\r\n                  </Label>\r\n                  <div className=\"form-label-group mx-1\">\r\n                    {CreatAccountView &&\r\n                      CreatAccountView?.createTicket?.Radiobutton?.input?.map(\r\n                        (ele, i) => {\r\n                          return (\r\n                            <FormGroup key={i}>\r\n                              <Input\r\n                                key={i}\r\n                                style={{ marginRight: \"3px\" }}\r\n                                required\r\n                                type={ele?.type?._attributes?.type}\r\n                                name={ele?.name?._text}\r\n                                value={`${\r\n                                  ele?.label?._text == \"Active\"\r\n                                    ? \"Active\"\r\n                                    : \"Deactive\"\r\n                                }`}\r\n                                onChange={handleInputChange}\r\n                              />{\" \"}\r\n                              <span\r\n                                className=\"mx-1 mt-1\"\r\n                                style={{ marginRight: \"20px\" }}\r\n                              >\r\n                                {ele?.label?._text}\r\n                              </span>\r\n                            </FormGroup>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </div>\r\n                </Col>\r\n              </Row> */}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2 mx-2\"\r\n                >\r\n                  Submit\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n            {Comments &&\r\n              Comments?.map((element, index) => (\r\n                <>\r\n                  <Row key={index} className=\"my-2\">\r\n                    <Col lg=\"6\" md=\"6\" sm=\"12\">\r\n                      <Label>Comment</Label>\r\n                      <Input\r\n                        type=\"textarea\"\r\n                        name=\"comment\"\r\n                        placeholder=\"Comment\"\r\n                        value={element.comment || \"\"}\r\n                        onChange={(e) => handleComment(index, e)}\r\n                      />\r\n                    </Col>\r\n\r\n                    <Col className=\"d-flex mt-2\" lg=\"3\" md=\"3\" sm=\"12\">\r\n                      <div>\r\n                        {index ? (\r\n                          <Button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removeFormFields(index)}\r\n                          >\r\n                            -\r\n                          </Button>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div>\r\n                        <Button\r\n                          className=\"ml-1 \"\r\n                          color=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={() => addFormFields()}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              ))}\r\n            <Button\r\n              className=\"ml-1 \"\r\n              color=\"primary\"\r\n              onClick={(e) => {\r\n                SubmitComment(e);\r\n              }}\r\n            >\r\n              Submit Comment\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        fullscreen=\"xl\"\r\n        size=\"lg\"\r\n        backdrop={false}\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        {...args}\r\n      >\r\n        <ModalHeader toggle={toggle}>Product List</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modalheaderaddrol p-1\">\r\n            <h3>Product List</h3>\r\n            <Table\r\n              className=\"tableofrole\"\r\n              bordered\r\n              borderless\r\n              hover\r\n              responsive\r\n              size=\"sm\"\r\n              striped\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>S.No.</th>\r\n                  <th>Product Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody></tbody>\r\n            </Table>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n      <Modal\r\n        fullscreen=\"xl\"\r\n        size=\"lg\"\r\n        backdrop={false}\r\n        isOpen={modal}\r\n        toggle={toggle}\r\n        {...args}\r\n      >\r\n        <ModalHeader toggle={toggle}>Part List</ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"modalheaderaddrol p-1\">\r\n            <h3>Part List</h3>\r\n            <Table\r\n              className=\"tableofrole\"\r\n              bordered\r\n              borderless\r\n              hover\r\n              responsive\r\n              size=\"sm\"\r\n              striped\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>S.No.</th>\r\n                  <th>Part Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody></tbody>\r\n            </Table>\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default CreateTicket;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}